Total amount of searched repo: 1000
----------------
Github Link: git://github.com/siddhant-99/ibm_crackcovid.git
Repository: siddhant-99/ibm_crackcovid
File path: models/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/hgchen/tf_model_zoo.git
Repository: hgchen/tf_model_zoo
File path: inceptionv4/pytorch_load.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 189
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 193
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 195
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 196
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 197
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 199
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/narayanhari/dist.git
Repository: narayanhari/dist
File path: feeds/model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/siddhant-99/ibm_crackcovid.git
Repository: siddhant-99/ibm_crackcovid
File path: load_model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/sriram98v/fastaiColab.git
Repository: sriram98v/fastaiColab
File path: dl1/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 189
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 193
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 195
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 196
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 197
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 199
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/Rupak1432/fastai.git
Repository: Rupak1432/fastai
File path: fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/narayanhari/dist.git
Repository: narayanhari/dist
File path: feeds/load_model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/Seifeldin7/Machine-Learning.git
Repository: Seifeldin7/Machine-Learning
File path: Face Recognition/inception_resnet_v1.py
API Invocation in line: 26
Conv2D(32, 3, strides=2, padding='valid', use_bias=False, name='Conv2d_1a_3x3')(inputs)

API Invocation in line: 27
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_1a_3x3_BatchNorm')(x)

API Invocation in line: 28
Activation('relu', name='Conv2d_1a_3x3_Activation')(x)

API Invocation in line: 29
Conv2D(32, 3, strides=1, padding='valid', use_bias=False, name='Conv2d_2a_3x3')(x)

API Invocation in line: 30
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_2a_3x3_BatchNorm')(x)

API Invocation in line: 31
Activation('relu', name='Conv2d_2a_3x3_Activation')(x)

API Invocation in line: 32
Conv2D(64, 3, strides=1, padding='same', use_bias=False, name='Conv2d_2b_3x3')(x)

API Invocation in line: 33
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_2b_3x3_BatchNorm')(x)

API Invocation in line: 34
Activation('relu', name='Conv2d_2b_3x3_Activation')(x)

API Invocation in line: 36
Conv2D(80, 1, strides=1, padding='valid', use_bias=False, name='Conv2d_3b_1x1')(x)

API Invocation in line: 37
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_3b_1x1_BatchNorm')(x)

API Invocation in line: 38
Activation('relu', name='Conv2d_3b_1x1_Activation')(x)

API Invocation in line: 39
Conv2D(192, 3, strides=1, padding='valid', use_bias=False, name='Conv2d_4a_3x3')(x)

API Invocation in line: 40
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_4a_3x3_BatchNorm')(x)

API Invocation in line: 41
Activation('relu', name='Conv2d_4a_3x3_Activation')(x)

API Invocation in line: 42
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Conv2d_4b_3x3')(x)

API Invocation in line: 43
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_4b_3x3_BatchNorm')(x)

API Invocation in line: 44
Activation('relu', name='Conv2d_4b_3x3_Activation')(x)

API Invocation in line: 47
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 48
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 49
Activation('relu', name='Block35_1_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 50
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 51
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 52
Activation('relu', name='Block35_1_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 53
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 54
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 55
Activation('relu', name='Block35_1_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 56
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 57
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 58
Activation('relu', name='Block35_1_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 59
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 60
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 61
Activation('relu', name='Block35_1_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 62
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 63
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 64
Activation('relu', name='Block35_1_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 67
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_1_Conv2d_1x1')(mixed)

API Invocation in line: 72
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 73
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 74
Activation('relu', name='Block35_2_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 75
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 76
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 77
Activation('relu', name='Block35_2_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 78
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 79
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 80
Activation('relu', name='Block35_2_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 81
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 82
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 83
Activation('relu', name='Block35_2_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 84
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 85
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 86
Activation('relu', name='Block35_2_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 87
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 88
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 89
Activation('relu', name='Block35_2_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 92
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_2_Conv2d_1x1')(mixed)

API Invocation in line: 97
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 98
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 99
Activation('relu', name='Block35_3_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 100
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 101
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 102
Activation('relu', name='Block35_3_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 103
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 104
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 105
Activation('relu', name='Block35_3_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 106
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 107
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 108
Activation('relu', name='Block35_3_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 109
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 110
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 111
Activation('relu', name='Block35_3_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 112
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 113
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 114
Activation('relu', name='Block35_3_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 117
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_3_Conv2d_1x1')(mixed)

API Invocation in line: 122
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 123
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 124
Activation('relu', name='Block35_4_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 125
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 126
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 127
Activation('relu', name='Block35_4_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 128
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 129
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 130
Activation('relu', name='Block35_4_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 131
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 132
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 133
Activation('relu', name='Block35_4_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 134
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 135
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 136
Activation('relu', name='Block35_4_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 137
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 138
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 139
Activation('relu', name='Block35_4_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 142
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_4_Conv2d_1x1')(mixed)

API Invocation in line: 147
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 148
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 149
Activation('relu', name='Block35_5_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 150
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 151
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 152
Activation('relu', name='Block35_5_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 153
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 154
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 155
Activation('relu', name='Block35_5_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 156
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 157
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 158
Activation('relu', name='Block35_5_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 159
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 160
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 161
Activation('relu', name='Block35_5_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 162
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 163
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 164
Activation('relu', name='Block35_5_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 167
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_5_Conv2d_1x1')(mixed)

API Invocation in line: 173
Conv2D(384, 3, strides=2, padding='valid', use_bias=False, name='Mixed_6a_Branch_0_Conv2d_1a_3x3')(x)

API Invocation in line: 174
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_0_Conv2d_1a_3x3_BatchNorm')(branch_0)

API Invocation in line: 175
Activation('relu', name='Mixed_6a_Branch_0_Conv2d_1a_3x3_Activation')(branch_0)

API Invocation in line: 176
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Mixed_6a_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 177
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 178
Activation('relu', name='Mixed_6a_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 179
Conv2D(192, 3, strides=1, padding='same', use_bias=False, name='Mixed_6a_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 180
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 181
Activation('relu', name='Mixed_6a_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 182
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Mixed_6a_Branch_1_Conv2d_1a_3x3')(branch_1)

API Invocation in line: 183
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_1_Conv2d_1a_3x3_BatchNorm')(branch_1)

API Invocation in line: 184
Activation('relu', name='Mixed_6a_Branch_1_Conv2d_1a_3x3_Activation')(branch_1)

API Invocation in line: 190
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_1_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 191
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 192
Activation('relu', name='Block17_1_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 193
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_1_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 194
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 195
Activation('relu', name='Block17_1_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 196
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_1_Branch_1_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 197
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_1_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 198
Activation('relu', name='Block17_1_Branch_1_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 199
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_1_Branch_1_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 200
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_1_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 201
Activation('relu', name='Block17_1_Branch_1_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 204
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_1_Conv2d_1x1')(mixed)

API Invocation in line: 209
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_2_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 210
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 211
Activation('relu', name='Block17_2_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 212
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_2_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 213
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 214
Activation('relu', name='Block17_2_Branch_2_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 215
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_2_Branch_2_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 216
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_2_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 217
Activation('relu', name='Block17_2_Branch_2_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 218
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_2_Branch_2_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 219
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_2_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 220
Activation('relu', name='Block17_2_Branch_2_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 223
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_2_Conv2d_1x1')(mixed)

API Invocation in line: 228
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_3_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 229
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 230
Activation('relu', name='Block17_3_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 231
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_3_Branch_3_Conv2d_0a_1x1')(x)

API Invocation in line: 232
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_3_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 233
Activation('relu', name='Block17_3_Branch_3_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 234
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_3_Branch_3_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 235
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_3_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 236
Activation('relu', name='Block17_3_Branch_3_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 237
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_3_Branch_3_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 238
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_3_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 239
Activation('relu', name='Block17_3_Branch_3_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 242
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_3_Conv2d_1x1')(mixed)

API Invocation in line: 247
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_4_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 248
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 249
Activation('relu', name='Block17_4_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 250
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_4_Branch_4_Conv2d_0a_1x1')(x)

API Invocation in line: 251
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_4_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 252
Activation('relu', name='Block17_4_Branch_4_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 253
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_4_Branch_4_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 254
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_4_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 255
Activation('relu', name='Block17_4_Branch_4_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 256
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_4_Branch_4_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 257
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_4_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 258
Activation('relu', name='Block17_4_Branch_4_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 261
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_4_Conv2d_1x1')(mixed)

API Invocation in line: 266
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_5_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 267
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 268
Activation('relu', name='Block17_5_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 269
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_5_Branch_5_Conv2d_0a_1x1')(x)

API Invocation in line: 270
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_5_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 271
Activation('relu', name='Block17_5_Branch_5_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 272
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_5_Branch_5_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 273
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_5_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 274
Activation('relu', name='Block17_5_Branch_5_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 275
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_5_Branch_5_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 276
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_5_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 277
Activation('relu', name='Block17_5_Branch_5_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 280
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_5_Conv2d_1x1')(mixed)

API Invocation in line: 285
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_6_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 286
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 287
Activation('relu', name='Block17_6_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 288
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_6_Branch_6_Conv2d_0a_1x1')(x)

API Invocation in line: 289
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_6_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 290
Activation('relu', name='Block17_6_Branch_6_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 291
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_6_Branch_6_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 292
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_6_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 293
Activation('relu', name='Block17_6_Branch_6_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 294
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_6_Branch_6_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 295
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_6_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 296
Activation('relu', name='Block17_6_Branch_6_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 299
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_6_Conv2d_1x1')(mixed)

API Invocation in line: 304
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_7_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 305
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 306
Activation('relu', name='Block17_7_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 307
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_7_Branch_7_Conv2d_0a_1x1')(x)

API Invocation in line: 308
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_7_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 309
Activation('relu', name='Block17_7_Branch_7_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 310
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_7_Branch_7_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 311
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_7_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 312
Activation('relu', name='Block17_7_Branch_7_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 313
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_7_Branch_7_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 314
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_7_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 315
Activation('relu', name='Block17_7_Branch_7_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 318
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_7_Conv2d_1x1')(mixed)

API Invocation in line: 323
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_8_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 324
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 325
Activation('relu', name='Block17_8_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 326
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_8_Branch_8_Conv2d_0a_1x1')(x)

API Invocation in line: 327
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_8_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 328
Activation('relu', name='Block17_8_Branch_8_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 329
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_8_Branch_8_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 330
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_8_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 331
Activation('relu', name='Block17_8_Branch_8_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 332
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_8_Branch_8_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 333
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_8_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 334
Activation('relu', name='Block17_8_Branch_8_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 337
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_8_Conv2d_1x1')(mixed)

API Invocation in line: 342
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_9_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 343
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 344
Activation('relu', name='Block17_9_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 345
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_9_Branch_9_Conv2d_0a_1x1')(x)

API Invocation in line: 346
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_9_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 347
Activation('relu', name='Block17_9_Branch_9_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 348
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_9_Branch_9_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 349
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_9_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 350
Activation('relu', name='Block17_9_Branch_9_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 351
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_9_Branch_9_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 352
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_9_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 353
Activation('relu', name='Block17_9_Branch_9_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 356
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_9_Conv2d_1x1')(mixed)

API Invocation in line: 361
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_10_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 362
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 363
Activation('relu', name='Block17_10_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 364
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_10_Branch_10_Conv2d_0a_1x1')(x)

API Invocation in line: 365
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_10_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 366
Activation('relu', name='Block17_10_Branch_10_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 367
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_10_Branch_10_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 368
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_10_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 369
Activation('relu', name='Block17_10_Branch_10_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 370
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_10_Branch_10_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 371
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_10_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 372
Activation('relu', name='Block17_10_Branch_10_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 375
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_10_Conv2d_1x1')(mixed)

API Invocation in line: 381
Conv2D(256, 1, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_0_Conv2d_0a_1x1')(x)

API Invocation in line: 382
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_0_Conv2d_0a_1x1_BatchNorm')(branch_0)

API Invocation in line: 383
Activation('relu', name='Mixed_7a_Branch_0_Conv2d_0a_1x1_Activation')(branch_0)

API Invocation in line: 384
Conv2D(384, 3, strides=2, padding='valid', use_bias=False, name='Mixed_7a_Branch_0_Conv2d_1a_3x3')(branch_0)

API Invocation in line: 385
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_0_Conv2d_1a_3x3_BatchNorm')(branch_0)

API Invocation in line: 386
Activation('relu', name='Mixed_7a_Branch_0_Conv2d_1a_3x3_Activation')(branch_0)

API Invocation in line: 387
Conv2D(256, 1, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 388
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 389
Activation('relu', name='Mixed_7a_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 390
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Mixed_7a_Branch_1_Conv2d_1a_3x3')(branch_1)

API Invocation in line: 391
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_1_Conv2d_1a_3x3_BatchNorm')(branch_1)

API Invocation in line: 392
Activation('relu', name='Mixed_7a_Branch_1_Conv2d_1a_3x3_Activation')(branch_1)

API Invocation in line: 393
Conv2D(256, 1, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 394
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 395
Activation('relu', name='Mixed_7a_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 396
Conv2D(256, 3, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 397
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 398
Activation('relu', name='Mixed_7a_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 399
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Mixed_7a_Branch_2_Conv2d_1a_3x3')(branch_2)

API Invocation in line: 400
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_2_Conv2d_1a_3x3_BatchNorm')(branch_2)

API Invocation in line: 401
Activation('relu', name='Mixed_7a_Branch_2_Conv2d_1a_3x3_Activation')(branch_2)

API Invocation in line: 408
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_1_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 409
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 410
Activation('relu', name='Block8_1_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 411
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_1_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 412
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 413
Activation('relu', name='Block8_1_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 414
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_1_Branch_1_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 415
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_1_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 416
Activation('relu', name='Block8_1_Branch_1_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 417
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_1_Branch_1_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 418
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_1_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 419
Activation('relu', name='Block8_1_Branch_1_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 422
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_1_Conv2d_1x1')(mixed)

API Invocation in line: 427
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_2_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 428
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 429
Activation('relu', name='Block8_2_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 430
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_2_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 431
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 432
Activation('relu', name='Block8_2_Branch_2_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 433
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_2_Branch_2_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 434
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_2_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 435
Activation('relu', name='Block8_2_Branch_2_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 436
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_2_Branch_2_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 437
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_2_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 438
Activation('relu', name='Block8_2_Branch_2_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 441
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_2_Conv2d_1x1')(mixed)

API Invocation in line: 446
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_3_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 447
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 448
Activation('relu', name='Block8_3_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 449
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_3_Branch_3_Conv2d_0a_1x1')(x)

API Invocation in line: 450
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_3_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 451
Activation('relu', name='Block8_3_Branch_3_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 452
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_3_Branch_3_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 453
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_3_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 454
Activation('relu', name='Block8_3_Branch_3_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 455
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_3_Branch_3_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 456
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_3_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 457
Activation('relu', name='Block8_3_Branch_3_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 460
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_3_Conv2d_1x1')(mixed)

API Invocation in line: 465
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_4_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 466
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 467
Activation('relu', name='Block8_4_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 468
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_4_Branch_4_Conv2d_0a_1x1')(x)

API Invocation in line: 469
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_4_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 470
Activation('relu', name='Block8_4_Branch_4_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 471
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_4_Branch_4_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 472
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_4_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 473
Activation('relu', name='Block8_4_Branch_4_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 474
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_4_Branch_4_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 475
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_4_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 476
Activation('relu', name='Block8_4_Branch_4_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 479
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_4_Conv2d_1x1')(mixed)

API Invocation in line: 484
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_5_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 485
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 486
Activation('relu', name='Block8_5_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 487
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_5_Branch_5_Conv2d_0a_1x1')(x)

API Invocation in line: 488
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_5_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 489
Activation('relu', name='Block8_5_Branch_5_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 490
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_5_Branch_5_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 491
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_5_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 492
Activation('relu', name='Block8_5_Branch_5_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 493
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_5_Branch_5_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 494
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_5_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 495
Activation('relu', name='Block8_5_Branch_5_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 498
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_5_Conv2d_1x1')(mixed)

API Invocation in line: 503
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_6_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 504
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 505
Activation('relu', name='Block8_6_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 506
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_6_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 507
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 508
Activation('relu', name='Block8_6_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 509
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_6_Branch_1_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 510
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_1_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 511
Activation('relu', name='Block8_6_Branch_1_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 512
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_6_Branch_1_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 513
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_1_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 514
Activation('relu', name='Block8_6_Branch_1_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 517
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_6_Conv2d_1x1')(mixed)


----------------
Github Link: git://github.com/hgchen/tf_model_zoo.git
Repository: hgchen/tf_model_zoo
File path: inceptionresnetv2/pytorch_load.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 63
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 76
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 94
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 126
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 177
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 185
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 204
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 205
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 206
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 208
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 209
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 260
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/jijiezh/FaceMaskDetection.git
Repository: jijiezh/FaceMaskDetection
File path: models/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/sriram98v/fastaiColab.git
Repository: sriram98v/fastaiColab
File path: dl1/fastai/models/inceptionresnetv2.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 63
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 76
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 94
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 126
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 177
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 185
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 204
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 205
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 206
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 208
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 209
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 260
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/jijiezh/FaceMaskDetection.git
Repository: jijiezh/FaceMaskDetection
File path: load_model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/fabbrimatteo/LoCO.git
Repository: fabbrimatteo/LoCO
File path: models/inception.py
API Invocation in line: 17
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 18
BasicConv2d(32, 32, kernel_size=3)

API Invocation in line: 19
BasicConv2d(32, 64, kernel_size=3, padding=1)

API Invocation in line: 20
BasicConv2d(64, 80, kernel_size=1)

API Invocation in line: 21
BasicConv2d(80, 192, kernel_size=3)

API Invocation in line: 55
self.Conv2d_1a_3x3(x)

API Invocation in line: 57
self.Conv2d_2a_3x3(x)

API Invocation in line: 59
self.Conv2d_2b_3x3(x)

API Invocation in line: 63
self.Conv2d_3b_1x1(x)

API Invocation in line: 65
self.Conv2d_4a_3x3(x)

API Invocation in line: 100
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 102
BasicConv2d(in_channels, 48, kernel_size=1)

API Invocation in line: 103
BasicConv2d(48, 64, kernel_size=5, padding=2)

API Invocation in line: 105
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 106
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 107
BasicConv2d(96, 96, kernel_size=3, padding=1)

API Invocation in line: 109
BasicConv2d(in_channels, pool_features, kernel_size=1)

API Invocation in line: 133
BasicConv2d(in_channels, 384, kernel_size=3, stride=2)

API Invocation in line: 135
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 136
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 137
BasicConv2d(96, 96, kernel_size=3, stride=2)

API Invocation in line: 157
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 160
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 161
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 162
BasicConv2d(c7, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 164
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 165
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 166
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 167
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 168
BasicConv2d(c7, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 170
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 197
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 198
BasicConv2d(192, 320, kernel_size=3, stride=2)

API Invocation in line: 200
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 201
BasicConv2d(192, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 202
BasicConv2d(192, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 203
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 224
BasicConv2d(in_channels, 320, kernel_size=1)

API Invocation in line: 226
BasicConv2d(in_channels, 384, kernel_size=1)

API Invocation in line: 227
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 228
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 230
BasicConv2d(in_channels, 448, kernel_size=1)

API Invocation in line: 231
BasicConv2d(448, 384, kernel_size=3, padding=1)

API Invocation in line: 232
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 233
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 235
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 267
BasicConv2d(in_channels, 128, kernel_size=1)

API Invocation in line: 268
BasicConv2d(128, 768, kernel_size=5)

API Invocation in line: 293
nn.Conv2d(in_channels, out_channels, bias=False, **kwargs)


----------------
Github Link: git://github.com/kimbold/VRDL_2019.git
Repository: kimbold/VRDL_2019
File path: Final project/Code/inat_comp_2019/inception.py
API Invocation in line: 44
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 45
BasicConv2d(32, 32, kernel_size=3)

API Invocation in line: 46
BasicConv2d(32, 64, kernel_size=3, padding=1)

API Invocation in line: 47
BasicConv2d(64, 80, kernel_size=1)

API Invocation in line: 48
BasicConv2d(80, 192, kernel_size=3)

API Invocation in line: 83
self.Conv2d_1a_3x3(x)

API Invocation in line: 85
self.Conv2d_2a_3x3(x)

API Invocation in line: 87
self.Conv2d_2b_3x3(x)

API Invocation in line: 91
self.Conv2d_3b_1x1(x)

API Invocation in line: 93
self.Conv2d_4a_3x3(x)

API Invocation in line: 140
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 142
BasicConv2d(in_channels, 48, kernel_size=1)

API Invocation in line: 143
BasicConv2d(48, 64, kernel_size=5, padding=2)

API Invocation in line: 145
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 146
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 147
BasicConv2d(96, 96, kernel_size=3, padding=1)

API Invocation in line: 149
BasicConv2d(in_channels, pool_features, kernel_size=1)

API Invocation in line: 172
BasicConv2d(in_channels, 384, kernel_size=3, stride=2)

API Invocation in line: 174
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 175
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 176
BasicConv2d(96, 96, kernel_size=3, stride=2)

API Invocation in line: 195
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 198
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 199
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 200
BasicConv2d(c7, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 202
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 203
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 204
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 205
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 206
BasicConv2d(c7, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 208
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 234
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 235
BasicConv2d(192, 320, kernel_size=3, stride=2)

API Invocation in line: 237
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 238
BasicConv2d(192, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 239
BasicConv2d(192, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 240
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 260
BasicConv2d(in_channels, 320, kernel_size=1)

API Invocation in line: 262
BasicConv2d(in_channels, 384, kernel_size=1)

API Invocation in line: 263
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 264
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 266
BasicConv2d(in_channels, 448, kernel_size=1)

API Invocation in line: 267
BasicConv2d(448, 384, kernel_size=3, padding=1)

API Invocation in line: 268
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 269
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 271
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 302
BasicConv2d(in_channels, 128, kernel_size=1)

API Invocation in line: 303
BasicConv2d(128, 768, kernel_size=5)

API Invocation in line: 327
nn.Conv2d(in_channels, out_channels, bias=False, **kwargs)


----------------
Github Link: git://github.com/tyfei216/bioinformatics_classification.git
Repository: tyfei216/bioinformatics_classification
File path: models/inceptionv3.py
API Invocation in line: 18
nn.Conv2d(input_channels, output_channels, bias=False, **kwargs)

API Invocation in line: 34
BasicConv2d(input_channels, 64, kernel_size=1)

API Invocation in line: 78
BasicConv2d(input_channels, 384, kernel_size=3, stride=2)

API Invocation in line: 111
BasicConv2d(input_channels, 192, kernel_size=1)

API Invocation in line: 194
BasicConv2d(input_channels, 320, kernel_size=1)

API Invocation in line: 196
BasicConv2d(input_channels, 384, kernel_size=1)

API Invocation in line: 197
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 198
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 200
BasicConv2d(input_channels, 448, kernel_size=1)

API Invocation in line: 201
BasicConv2d(448, 384, kernel_size=3, padding=1)

API Invocation in line: 202
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 203
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 250
BasicConv2d(1, 32, kernel_size=3, padding=1)

API Invocation in line: 251
BasicConv2d(32, 32, kernel_size=3, padding=1)

API Invocation in line: 252
BasicConv2d(32, 64, kernel_size=3, padding=1)

API Invocation in line: 253
BasicConv2d(64, 80, kernel_size=1)

API Invocation in line: 254
BasicConv2d(80, 192, kernel_size=3)

API Invocation in line: 283
self.Conv2d_1a_3x3(x)

API Invocation in line: 284
self.Conv2d_2a_3x3(x)

API Invocation in line: 285
self.Conv2d_2b_3x3(x)

API Invocation in line: 286
self.Conv2d_3b_1x1(x)

API Invocation in line: 287
self.Conv2d_4a_3x3(x)


----------------
Github Link: git://github.com/hiroaki-shishido/fastai.git
Repository: hiroaki-shishido/fastai
File path: old/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/albertsl/aisaturdaysbcn.git
Repository: albertsl/aisaturdaysbcn
File path: day2/1_fastai/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 189
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 193
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 195
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 196
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 197
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 199
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/17Skye17/2019WAIC-hackthon-Garbage-Classification.git
Repository: 17Skye17/2019WAIC-hackthon-Garbage-Classification
File path: inference/pretrainedmodels/models/inceptionv4.py
API Invocation in line: 39
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 60
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 97
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 111
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 142
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 164
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 226
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 228
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 229
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 230
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 232
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 233
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 234
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 235
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 236
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/ProGamerGov/pytorch-old-tensorflow-models.git
Repository: ProGamerGov/pytorch-old-tensorflow-models
File path: inceptionv3_keras.py
API Invocation in line: 10
nn.Conv2d(in_channels=3, out_channels=32, kernel_size=(3, 3), stride=(2, 2), groups=1, bias=False)

API Invocation in line: 12
nn.Conv2d(in_channels=32, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 14
nn.Conv2d(in_channels=32, out_channels=64, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 16
nn.Conv2d(in_channels=64, out_channels=80, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 18
nn.Conv2d(in_channels=80, out_channels=192, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 20
nn.Conv2d(in_channels=192, out_channels=64, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 21
nn.Conv2d(in_channels=192, out_channels=48, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 22
nn.Conv2d(in_channels=192, out_channels=64, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 25
nn.Conv2d(in_channels=192, out_channels=32, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 28
nn.Conv2d(in_channels=64, out_channels=96, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 29
nn.Conv2d(in_channels=48, out_channels=64, kernel_size=(5, 5), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 32
nn.Conv2d(in_channels=96, out_channels=96, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 34
nn.Conv2d(in_channels=256, out_channels=64, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 35
nn.Conv2d(in_channels=256, out_channels=48, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 36
nn.Conv2d(in_channels=256, out_channels=64, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 39
nn.Conv2d(in_channels=256, out_channels=64, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 42
nn.Conv2d(in_channels=64, out_channels=96, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 43
nn.Conv2d(in_channels=48, out_channels=64, kernel_size=(5, 5), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 46
nn.Conv2d(in_channels=96, out_channels=96, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 48
nn.Conv2d(in_channels=288, out_channels=64, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 49
nn.Conv2d(in_channels=288, out_channels=48, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 50
nn.Conv2d(in_channels=288, out_channels=64, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 53
nn.Conv2d(in_channels=288, out_channels=64, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 56
nn.Conv2d(in_channels=64, out_channels=96, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 57
nn.Conv2d(in_channels=48, out_channels=64, kernel_size=(5, 5), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 60
nn.Conv2d(in_channels=96, out_channels=96, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 62
nn.Conv2d(in_channels=288, out_channels=64, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 63
nn.Conv2d(in_channels=288, out_channels=384, kernel_size=(3, 3), stride=(2, 2), groups=1, bias=False)

API Invocation in line: 66
nn.Conv2d(in_channels=64, out_channels=96, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 68
nn.Conv2d(in_channels=96, out_channels=96, kernel_size=(3, 3), stride=(2, 2), groups=1, bias=False)

API Invocation in line: 70
nn.Conv2d(in_channels=768, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 71
nn.Conv2d(in_channels=768, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 72
nn.Conv2d(in_channels=768, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 75
nn.Conv2d(in_channels=768, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 78
nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(7, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 79
nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(1, 7), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 82
nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(1, 7), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 83
nn.Conv2d(in_channels=128, out_channels=192, kernel_size=(7, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 86
nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(7, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 88
nn.Conv2d(in_channels=128, out_channels=192, kernel_size=(1, 7), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 90
nn.Conv2d(in_channels=768, out_channels=160, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 91
nn.Conv2d(in_channels=768, out_channels=160, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 92
nn.Conv2d(in_channels=768, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 95
nn.Conv2d(in_channels=768, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 98
nn.Conv2d(in_channels=160, out_channels=160, kernel_size=(7, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 99
nn.Conv2d(in_channels=160, out_channels=160, kernel_size=(1, 7), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 102
nn.Conv2d(in_channels=160, out_channels=160, kernel_size=(1, 7), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 103
nn.Conv2d(in_channels=160, out_channels=192, kernel_size=(7, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 106
nn.Conv2d(in_channels=160, out_channels=160, kernel_size=(7, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 108
nn.Conv2d(in_channels=160, out_channels=192, kernel_size=(1, 7), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 110
nn.Conv2d(in_channels=768, out_channels=160, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 111
nn.Conv2d(in_channels=768, out_channels=160, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 112
nn.Conv2d(in_channels=768, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 115
nn.Conv2d(in_channels=768, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 118
nn.Conv2d(in_channels=160, out_channels=160, kernel_size=(7, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 119
nn.Conv2d(in_channels=160, out_channels=160, kernel_size=(1, 7), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 122
nn.Conv2d(in_channels=160, out_channels=160, kernel_size=(1, 7), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 123
nn.Conv2d(in_channels=160, out_channels=192, kernel_size=(7, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 126
nn.Conv2d(in_channels=160, out_channels=160, kernel_size=(7, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 128
nn.Conv2d(in_channels=160, out_channels=192, kernel_size=(1, 7), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 130
nn.Conv2d(in_channels=768, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 131
nn.Conv2d(in_channels=768, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 132
nn.Conv2d(in_channels=768, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 135
nn.Conv2d(in_channels=768, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 138
nn.Conv2d(in_channels=192, out_channels=192, kernel_size=(7, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 139
nn.Conv2d(in_channels=192, out_channels=192, kernel_size=(1, 7), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 142
nn.Conv2d(in_channels=192, out_channels=192, kernel_size=(1, 7), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 143
nn.Conv2d(in_channels=192, out_channels=192, kernel_size=(7, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 146
nn.Conv2d(in_channels=192, out_channels=192, kernel_size=(7, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 148
nn.Conv2d(in_channels=192, out_channels=192, kernel_size=(1, 7), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 150
nn.Conv2d(in_channels=768, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 151
nn.Conv2d(in_channels=768, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 154
nn.Conv2d(in_channels=192, out_channels=192, kernel_size=(1, 7), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 155
nn.Conv2d(in_channels=192, out_channels=320, kernel_size=(3, 3), stride=(2, 2), groups=1, bias=False)

API Invocation in line: 158
nn.Conv2d(in_channels=192, out_channels=192, kernel_size=(7, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 160
nn.Conv2d(in_channels=192, out_channels=192, kernel_size=(3, 3), stride=(2, 2), groups=1, bias=False)

API Invocation in line: 162
nn.Conv2d(in_channels=1280, out_channels=448, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 163
nn.Conv2d(in_channels=1280, out_channels=384, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 164
nn.Conv2d(in_channels=1280, out_channels=320, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 167
nn.Conv2d(in_channels=1280, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 170
nn.Conv2d(in_channels=448, out_channels=384, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 171
nn.Conv2d(in_channels=384, out_channels=384, kernel_size=(1, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 172
nn.Conv2d(in_channels=384, out_channels=384, kernel_size=(3, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 176
nn.Conv2d(in_channels=384, out_channels=384, kernel_size=(1, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 177
nn.Conv2d(in_channels=384, out_channels=384, kernel_size=(3, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 180
nn.Conv2d(in_channels=2048, out_channels=448, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 181
nn.Conv2d(in_channels=2048, out_channels=384, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 182
nn.Conv2d(in_channels=2048, out_channels=320, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 185
nn.Conv2d(in_channels=2048, out_channels=192, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 188
nn.Conv2d(in_channels=448, out_channels=384, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 189
nn.Conv2d(in_channels=384, out_channels=384, kernel_size=(1, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 190
nn.Conv2d(in_channels=384, out_channels=384, kernel_size=(3, 1), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 194
nn.Conv2d(in_channels=384, out_channels=384, kernel_size=(1, 3), stride=(1, 1), groups=1, bias=False)

API Invocation in line: 195
nn.Conv2d(in_channels=384, out_channels=384, kernel_size=(3, 1), stride=(1, 1), groups=1, bias=False)


----------------
Github Link: git://github.com/zczeng333/Defect-Detection.git
Repository: zczeng333/Defect-Detection
File path: InceptionV4/model_v4.py
API Invocation in line: 38
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 59
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 96
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 110
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 141
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 163
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 225
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 227
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 228
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 229
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 231
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 232
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 233
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 234
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 235
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/17Skye17/2019WAIC-hackthon-Garbage-Classification.git
Repository: 17Skye17/2019WAIC-hackthon-Garbage-Classification
File path: pretrainedmodels/models/inceptionv4.py
API Invocation in line: 39
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 60
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 97
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 111
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 142
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 164
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 226
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 228
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 229
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 230
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 232
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 233
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 234
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 235
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 236
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/thommiano/hear-and-see_peerj.git
Repository: thommiano/hear-and-see_peerj
File path: src/deepdream/inception.py
API Invocation in line: 38
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 39
BasicConv2d(32, 32, kernel_size=3)

API Invocation in line: 40
BasicConv2d(32, 64, kernel_size=3, padding=1)

API Invocation in line: 41
BasicConv2d(64, 80, kernel_size=1)

API Invocation in line: 42
BasicConv2d(80, 192, kernel_size=3)

API Invocation in line: 169
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 171
BasicConv2d(in_channels, 48, kernel_size=1)

API Invocation in line: 172
BasicConv2d(48, 64, kernel_size=5, padding=2)

API Invocation in line: 174
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 175
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 176
BasicConv2d(96, 96, kernel_size=3, padding=1)

API Invocation in line: 178
BasicConv2d(in_channels, pool_features, kernel_size=1)

API Invocation in line: 201
BasicConv2d(in_channels, 384, kernel_size=3, stride=2)

API Invocation in line: 203
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 204
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 205
BasicConv2d(96, 96, kernel_size=3, stride=2)

API Invocation in line: 224
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 227
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 228
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 229
BasicConv2d(c7, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 231
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 232
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 233
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 234
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 235
BasicConv2d(c7, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 237
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 263
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 264
BasicConv2d(192, 320, kernel_size=3, stride=2)

API Invocation in line: 266
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 267
BasicConv2d(192, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 268
BasicConv2d(192, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 269
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 289
BasicConv2d(in_channels, 320, kernel_size=1)

API Invocation in line: 291
BasicConv2d(in_channels, 384, kernel_size=1)

API Invocation in line: 292
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 293
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 295
BasicConv2d(in_channels, 448, kernel_size=1)

API Invocation in line: 296
BasicConv2d(448, 384, kernel_size=3, padding=1)

API Invocation in line: 297
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 298
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 300
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 331
BasicConv2d(in_channels, 128, kernel_size=1)

API Invocation in line: 332
BasicConv2d(128, 768, kernel_size=5)

API Invocation in line: 356
nn.Conv2d(in_channels, out_channels, bias=False, **kwargs)


----------------
Github Link: git://github.com/Rupak1432/fastai.git
Repository: Rupak1432/fastai
File path: fastai/models/inceptionresnetv2.py
API Invocation in line: 16
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 37
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 71
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 84
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 103
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 128
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 136
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 189
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 197
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 222
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 223
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 224
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 226
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 227
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 278
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/twebb22/FastAIML.git
Repository: twebb22/FastAIML
File path: old/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/atulsingh0/DeepLearning.git
Repository: atulsingh0/DeepLearning
File path: fastai_ml/fastai/models/inceptionresnetv2.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 63
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 76
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 94
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 126
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 177
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 185
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 204
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 205
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 206
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 208
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 209
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 260
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/peterspenler/Modelling-Complex-Lyric-Project.git
Repository: peterspenler/Modelling-Complex-Lyric-Project
File path: fastai_old/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/blackdogtop/BGS-HTR.git
Repository: blackdogtop/BGS-HTR
File path: src/TextLineHTR/model.py
API Invocation in line: 32
torch.nn.Conv2d(in_channels, out_channels, kernel_size, stride, padding, dilation, groups, bias)

API Invocation in line: 33
torch.nn.Conv2d(in_channels, out_channels, kernel_size, stride, padding, dilation, groups, bias)


----------------
Github Link: git://github.com/NullpoGah/pytorch-masks.git
Repository: NullpoGah/pytorch-masks
File path: models/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/Antikpatel/FaceMaskDetection.git
Repository: Antikpatel/FaceMaskDetection
File path: models/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/17Skye17/2019WAIC-hackthon-Garbage-Classification.git
Repository: 17Skye17/2019WAIC-hackthon-Garbage-Classification
File path: inference/pretrainedmodels/models/inceptionresnetv2.py
API Invocation in line: 38
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 59
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 93
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 106
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 125
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 150
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 158
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 211
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 219
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 244
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 245
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 246
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 248
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 249
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 300
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/ehsanShahmi/Nurture-AI-course.git
Repository: ehsanShahmi/Nurture-AI-course
File path: Other Importants/fastai/fastai/models/inceptionresnetv2.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 63
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 76
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 94
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 126
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 177
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 185
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 204
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 205
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 206
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 208
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 209
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 260
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/bernardab/flu-cast.git
Repository: bernardab/flu-cast
File path: utils/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 189
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 193
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 195
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 196
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 197
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 199
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/saswat0/Mask-Detection.git
Repository: saswat0/Mask-Detection
File path: models/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/17Skye17/2019WAIC-hackthon-Garbage-Classification.git
Repository: 17Skye17/2019WAIC-hackthon-Garbage-Classification
File path: pretrainedmodels/models/inceptionresnetv2.py
API Invocation in line: 38
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 59
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 93
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 106
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 125
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 150
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 158
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 211
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 219
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 244
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 245
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 246
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 248
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 249
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 300
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/albertsl/aisaturdaysbcn.git
Repository: albertsl/aisaturdaysbcn
File path: day2/1_fastai/fastai/models/inceptionresnetv2.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 63
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 76
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 94
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 126
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 177
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 185
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 204
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 205
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 206
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 208
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 209
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 260
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/Antikpatel/FaceMaskDetection.git
Repository: Antikpatel/FaceMaskDetection
File path: load_model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/agoila/fastai-dl.git
Repository: agoila/fastai-dl
File path: fastai/models/inceptionresnetv2.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 63
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 76
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 94
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 126
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 177
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 185
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 204
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 205
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 206
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 208
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 209
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 260
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/GwonHeeJun/HSDL-Solution.git
Repository: GwonHeeJun/HSDL-Solution
File path: mask_detect/models/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/rajat9998/MNIST-handwritten-digits-recognition.git
Repository: rajat9998/MNIST-handwritten-digits-recognition
File path: fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/SunYufei/face-mask-detection.git
Repository: SunYufei/face-mask-detection
File path: load_model/MainModel.py
API Invocation in line: 274
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/GwonHeeJun/HSDL-Solution.git
Repository: GwonHeeJun/HSDL-Solution
File path: mask_detect/load_model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/p-syd/social-distancing-ml.git
Repository: p-syd/social-distancing-ml
File path: models/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/NullpoGah/pytorch-masks.git
Repository: NullpoGah/pytorch-masks
File path: load_model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/HolmesNL/forensische-gezichtsvergelijking.git
Repository: HolmesNL/forensische-gezichtsvergelijking
File path: deepface/basemodels/Facenet.py
API Invocation in line: 30
Conv2D(32, 3, strides=2, padding='valid', use_bias=False, name='Conv2d_1a_3x3')(inputs)

API Invocation in line: 37
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_1a_3x3_BatchNorm')(x)

API Invocation in line: 44
Activation('relu', name='Conv2d_1a_3x3_Activation')(x)

API Invocation in line: 48
Conv2D(32, 3, strides=1, padding='valid', use_bias=False, name='Conv2d_2a_3x3')(x)

API Invocation in line: 55
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_2a_3x3_BatchNorm')(x)

API Invocation in line: 62
Activation('relu', name='Conv2d_2a_3x3_Activation')(x)

API Invocation in line: 66
Conv2D(64, 3, strides=1, padding='same', use_bias=False, name='Conv2d_2b_3x3')(x)

API Invocation in line: 73
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_2b_3x3_BatchNorm')(x)

API Invocation in line: 80
Activation('relu', name='Conv2d_2b_3x3_Activation')(x)

API Invocation in line: 89
Conv2D(80, 1, strides=1, padding='valid', use_bias=False, name='Conv2d_3b_1x1')(x)

API Invocation in line: 96
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_3b_1x1_BatchNorm')(x)

API Invocation in line: 103
Activation('relu', name='Conv2d_3b_1x1_Activation')(x)

API Invocation in line: 107
Conv2D(192, 3, strides=1, padding='valid', use_bias=False, name='Conv2d_4a_3x3')(x)

API Invocation in line: 114
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_4a_3x3_BatchNorm')(x)

API Invocation in line: 121
Activation('relu', name='Conv2d_4a_3x3_Activation')(x)

API Invocation in line: 125
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Conv2d_4b_3x3')(x)

API Invocation in line: 132
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_4b_3x3_BatchNorm')(x)

API Invocation in line: 139
Activation('relu', name='Conv2d_4b_3x3_Activation')(x)

API Invocation in line: 145
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 152
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 159
Activation('relu', name='Block35_1_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 163
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 170
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 177
Activation('relu', name='Block35_1_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 181
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 188
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 195
Activation('relu', name='Block35_1_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 199
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 206
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 213
Activation('relu', name='Block35_1_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 217
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 224
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 231
Activation('relu', name='Block35_1_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 235
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 242
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 249
Activation('relu', name='Block35_1_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 258
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_1_Conv2d_1x1')(mixed)

API Invocation in line: 277
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 284
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 291
Activation('relu', name='Block35_2_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 295
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 302
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 309
Activation('relu', name='Block35_2_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 313
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 320
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 327
Activation('relu', name='Block35_2_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 331
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 338
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 345
Activation('relu', name='Block35_2_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 349
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 356
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 363
Activation('relu', name='Block35_2_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 367
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 374
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 381
Activation('relu', name='Block35_2_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 390
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_2_Conv2d_1x1')(mixed)

API Invocation in line: 409
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 416
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 423
Activation('relu', name='Block35_3_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 427
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 434
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 441
Activation('relu', name='Block35_3_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 445
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 452
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 459
Activation('relu', name='Block35_3_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 463
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 470
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 477
Activation('relu', name='Block35_3_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 481
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 488
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 495
Activation('relu', name='Block35_3_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 499
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 506
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 513
Activation('relu', name='Block35_3_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 522
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_3_Conv2d_1x1')(mixed)

API Invocation in line: 541
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 548
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 555
Activation('relu', name='Block35_4_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 559
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 566
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 573
Activation('relu', name='Block35_4_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 577
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 584
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 591
Activation('relu', name='Block35_4_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 595
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 602
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 609
Activation('relu', name='Block35_4_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 613
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 620
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 627
Activation('relu', name='Block35_4_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 631
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 638
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 645
Activation('relu', name='Block35_4_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 654
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_4_Conv2d_1x1')(mixed)

API Invocation in line: 673
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 680
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 687
Activation('relu', name='Block35_5_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 691
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 698
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 705
Activation('relu', name='Block35_5_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 709
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 716
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 723
Activation('relu', name='Block35_5_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 727
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 734
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 741
Activation('relu', name='Block35_5_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 745
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 752
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 759
Activation('relu', name='Block35_5_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 763
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 770
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 777
Activation('relu', name='Block35_5_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 786
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_5_Conv2d_1x1')(mixed)

API Invocation in line: 806
Conv2D(384, 3, strides=2, padding='valid', use_bias=False, name='Mixed_6a_Branch_0_Conv2d_1a_3x3')(x)

API Invocation in line: 813
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_0_Conv2d_1a_3x3_BatchNorm')(branch_0)

API Invocation in line: 820
Activation('relu', name='Mixed_6a_Branch_0_Conv2d_1a_3x3_Activation')(branch_0)

API Invocation in line: 824
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Mixed_6a_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 831
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 838
Activation('relu', name='Mixed_6a_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 842
Conv2D(192, 3, strides=1, padding='same', use_bias=False, name='Mixed_6a_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 849
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 856
Activation('relu', name='Mixed_6a_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 860
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Mixed_6a_Branch_1_Conv2d_1a_3x3')(branch_1)

API Invocation in line: 867
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_1_Conv2d_1a_3x3_BatchNorm')(branch_1)

API Invocation in line: 874
Activation('relu', name='Mixed_6a_Branch_1_Conv2d_1a_3x3_Activation')(branch_1)

API Invocation in line: 891
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_1_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 898
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 905
Activation('relu', name='Block17_1_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 909
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_1_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 916
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 923
Activation('relu', name='Block17_1_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 927
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_1_Branch_1_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 934
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_1_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 941
Activation('relu', name='Block17_1_Branch_1_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 945
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_1_Branch_1_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 952
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_1_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 959
Activation('relu', name='Block17_1_Branch_1_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 968
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_1_Conv2d_1x1')(mixed)

API Invocation in line: 987
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_2_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 994
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 1001
Activation('relu', name='Block17_2_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 1005
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_2_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 1012
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 1019
Activation('relu', name='Block17_2_Branch_2_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 1023
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_2_Branch_2_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 1030
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_2_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 1037
Activation('relu', name='Block17_2_Branch_2_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 1041
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_2_Branch_2_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 1048
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_2_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 1055
Activation('relu', name='Block17_2_Branch_2_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 1064
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_2_Conv2d_1x1')(mixed)

API Invocation in line: 1083
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_3_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 1090
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 1097
Activation('relu', name='Block17_3_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 1101
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_3_Branch_3_Conv2d_0a_1x1')(x)

API Invocation in line: 1108
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_3_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 1115
Activation('relu', name='Block17_3_Branch_3_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 1119
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_3_Branch_3_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 1126
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_3_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 1133
Activation('relu', name='Block17_3_Branch_3_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 1137
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_3_Branch_3_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 1144
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_3_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 1151
Activation('relu', name='Block17_3_Branch_3_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 1160
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_3_Conv2d_1x1')(mixed)

API Invocation in line: 1179
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_4_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 1186
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 1193
Activation('relu', name='Block17_4_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 1197
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_4_Branch_4_Conv2d_0a_1x1')(x)

API Invocation in line: 1204
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_4_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 1211
Activation('relu', name='Block17_4_Branch_4_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 1215
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_4_Branch_4_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 1222
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_4_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 1229
Activation('relu', name='Block17_4_Branch_4_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 1233
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_4_Branch_4_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 1240
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_4_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 1247
Activation('relu', name='Block17_4_Branch_4_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 1256
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_4_Conv2d_1x1')(mixed)

API Invocation in line: 1275
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_5_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 1282
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 1289
Activation('relu', name='Block17_5_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 1293
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_5_Branch_5_Conv2d_0a_1x1')(x)

API Invocation in line: 1300
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_5_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 1307
Activation('relu', name='Block17_5_Branch_5_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 1311
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_5_Branch_5_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 1318
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_5_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 1325
Activation('relu', name='Block17_5_Branch_5_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 1329
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_5_Branch_5_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 1336
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_5_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 1343
Activation('relu', name='Block17_5_Branch_5_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 1352
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_5_Conv2d_1x1')(mixed)

API Invocation in line: 1371
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_6_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 1378
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 1385
Activation('relu', name='Block17_6_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 1389
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_6_Branch_6_Conv2d_0a_1x1')(x)

API Invocation in line: 1396
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_6_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 1403
Activation('relu', name='Block17_6_Branch_6_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 1407
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_6_Branch_6_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 1414
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_6_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 1421
Activation('relu', name='Block17_6_Branch_6_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 1425
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_6_Branch_6_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 1432
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_6_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 1439
Activation('relu', name='Block17_6_Branch_6_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 1448
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_6_Conv2d_1x1')(mixed)

API Invocation in line: 1467
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_7_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 1474
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 1481
Activation('relu', name='Block17_7_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 1485
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_7_Branch_7_Conv2d_0a_1x1')(x)

API Invocation in line: 1492
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_7_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 1499
Activation('relu', name='Block17_7_Branch_7_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 1503
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_7_Branch_7_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 1510
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_7_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 1517
Activation('relu', name='Block17_7_Branch_7_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 1521
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_7_Branch_7_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 1528
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_7_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 1535
Activation('relu', name='Block17_7_Branch_7_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 1544
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_7_Conv2d_1x1')(mixed)

API Invocation in line: 1563
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_8_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 1570
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 1577
Activation('relu', name='Block17_8_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 1581
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_8_Branch_8_Conv2d_0a_1x1')(x)

API Invocation in line: 1588
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_8_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 1595
Activation('relu', name='Block17_8_Branch_8_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 1599
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_8_Branch_8_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 1606
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_8_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 1613
Activation('relu', name='Block17_8_Branch_8_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 1617
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_8_Branch_8_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 1624
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_8_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 1631
Activation('relu', name='Block17_8_Branch_8_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 1640
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_8_Conv2d_1x1')(mixed)

API Invocation in line: 1659
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_9_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 1666
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 1673
Activation('relu', name='Block17_9_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 1677
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_9_Branch_9_Conv2d_0a_1x1')(x)

API Invocation in line: 1684
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_9_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 1691
Activation('relu', name='Block17_9_Branch_9_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 1695
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_9_Branch_9_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 1702
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_9_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 1709
Activation('relu', name='Block17_9_Branch_9_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 1713
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_9_Branch_9_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 1720
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_9_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 1727
Activation('relu', name='Block17_9_Branch_9_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 1736
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_9_Conv2d_1x1')(mixed)

API Invocation in line: 1755
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_10_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 1762
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 1769
Activation('relu', name='Block17_10_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 1773
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_10_Branch_10_Conv2d_0a_1x1')(x)

API Invocation in line: 1780
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_10_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 1787
Activation('relu', name='Block17_10_Branch_10_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 1791
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_10_Branch_10_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 1798
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_10_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 1805
Activation('relu', name='Block17_10_Branch_10_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 1809
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_10_Branch_10_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 1816
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_10_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 1823
Activation('relu', name='Block17_10_Branch_10_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 1832
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_10_Conv2d_1x1')(mixed)

API Invocation in line: 1852
Conv2D(256, 1, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_0_Conv2d_0a_1x1')(x)

API Invocation in line: 1859
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_0_Conv2d_0a_1x1_BatchNorm')(branch_0)

API Invocation in line: 1866
Activation('relu', name='Mixed_7a_Branch_0_Conv2d_0a_1x1_Activation')(branch_0)

API Invocation in line: 1870
Conv2D(384, 3, strides=2, padding='valid', use_bias=False, name='Mixed_7a_Branch_0_Conv2d_1a_3x3')(branch_0)

API Invocation in line: 1877
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_0_Conv2d_1a_3x3_BatchNorm')(branch_0)

API Invocation in line: 1884
Activation('relu', name='Mixed_7a_Branch_0_Conv2d_1a_3x3_Activation')(branch_0)

API Invocation in line: 1888
Conv2D(256, 1, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 1895
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 1902
Activation('relu', name='Mixed_7a_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 1906
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Mixed_7a_Branch_1_Conv2d_1a_3x3')(branch_1)

API Invocation in line: 1913
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_1_Conv2d_1a_3x3_BatchNorm')(branch_1)

API Invocation in line: 1920
Activation('relu', name='Mixed_7a_Branch_1_Conv2d_1a_3x3_Activation')(branch_1)

API Invocation in line: 1924
Conv2D(256, 1, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 1931
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 1938
Activation('relu', name='Mixed_7a_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 1942
Conv2D(256, 3, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 1949
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 1956
Activation('relu', name='Mixed_7a_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 1960
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Mixed_7a_Branch_2_Conv2d_1a_3x3')(branch_2)

API Invocation in line: 1967
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_2_Conv2d_1a_3x3_BatchNorm')(branch_2)

API Invocation in line: 1974
Activation('relu', name='Mixed_7a_Branch_2_Conv2d_1a_3x3_Activation')(branch_2)

API Invocation in line: 1992
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_1_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 1999
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 2006
Activation('relu', name='Block8_1_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 2010
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_1_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 2017
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 2024
Activation('relu', name='Block8_1_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 2028
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_1_Branch_1_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 2035
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_1_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 2042
Activation('relu', name='Block8_1_Branch_1_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 2046
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_1_Branch_1_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 2053
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_1_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 2060
Activation('relu', name='Block8_1_Branch_1_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 2069
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_1_Conv2d_1x1')(mixed)

API Invocation in line: 2088
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_2_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 2095
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 2102
Activation('relu', name='Block8_2_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 2106
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_2_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 2113
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 2120
Activation('relu', name='Block8_2_Branch_2_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 2124
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_2_Branch_2_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 2131
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_2_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 2138
Activation('relu', name='Block8_2_Branch_2_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 2142
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_2_Branch_2_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 2149
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_2_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 2156
Activation('relu', name='Block8_2_Branch_2_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 2165
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_2_Conv2d_1x1')(mixed)

API Invocation in line: 2184
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_3_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 2191
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 2198
Activation('relu', name='Block8_3_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 2202
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_3_Branch_3_Conv2d_0a_1x1')(x)

API Invocation in line: 2209
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_3_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 2216
Activation('relu', name='Block8_3_Branch_3_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 2220
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_3_Branch_3_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 2227
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_3_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 2234
Activation('relu', name='Block8_3_Branch_3_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 2238
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_3_Branch_3_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 2245
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_3_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 2252
Activation('relu', name='Block8_3_Branch_3_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 2261
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_3_Conv2d_1x1')(mixed)

API Invocation in line: 2280
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_4_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 2287
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 2294
Activation('relu', name='Block8_4_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 2298
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_4_Branch_4_Conv2d_0a_1x1')(x)

API Invocation in line: 2305
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_4_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 2312
Activation('relu', name='Block8_4_Branch_4_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 2316
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_4_Branch_4_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 2323
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_4_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 2330
Activation('relu', name='Block8_4_Branch_4_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 2334
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_4_Branch_4_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 2341
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_4_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 2348
Activation('relu', name='Block8_4_Branch_4_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 2357
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_4_Conv2d_1x1')(mixed)

API Invocation in line: 2376
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_5_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 2383
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 2390
Activation('relu', name='Block8_5_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 2394
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_5_Branch_5_Conv2d_0a_1x1')(x)

API Invocation in line: 2401
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_5_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 2408
Activation('relu', name='Block8_5_Branch_5_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 2412
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_5_Branch_5_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 2419
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_5_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 2426
Activation('relu', name='Block8_5_Branch_5_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 2430
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_5_Branch_5_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 2437
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_5_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 2444
Activation('relu', name='Block8_5_Branch_5_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 2453
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_5_Conv2d_1x1')(mixed)

API Invocation in line: 2472
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_6_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 2479
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 2486
Activation('relu', name='Block8_6_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 2490
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_6_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 2497
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 2504
Activation('relu', name='Block8_6_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 2508
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_6_Branch_1_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 2515
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_1_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 2522
Activation('relu', name='Block8_6_Branch_1_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 2526
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_6_Branch_1_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 2533
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_1_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 2540
Activation('relu', name='Block8_6_Branch_1_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 2549
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_6_Conv2d_1x1')(mixed)


----------------
Github Link: git://github.com/theGreenJedi/fast.git
Repository: theGreenJedi/fast
File path: fastai_repo/fastai/models/inceptionresnetv2.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 63
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 76
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 94
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 126
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 177
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 185
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 204
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 205
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 206
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 208
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 209
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 260
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/italodellagarza/eFaceRecon.git
Repository: italodellagarza/eFaceRecon
File path: facenet.py
API Invocation in line: 30
Conv2D(32, 3, strides=2, padding='valid', use_bias=False, name='Conv2d_1a_3x3')(inputs)

API Invocation in line: 31
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_1a_3x3_BatchNorm')(x)

API Invocation in line: 32
Activation('relu', name='Conv2d_1a_3x3_Activation')(x)

API Invocation in line: 33
Conv2D(32, 3, strides=1, padding='valid', use_bias=False, name='Conv2d_2a_3x3')(x)

API Invocation in line: 34
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_2a_3x3_BatchNorm')(x)

API Invocation in line: 35
Activation('relu', name='Conv2d_2a_3x3_Activation')(x)

API Invocation in line: 36
Conv2D(64, 3, strides=1, padding='same', use_bias=False, name='Conv2d_2b_3x3')(x)

API Invocation in line: 37
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_2b_3x3_BatchNorm')(x)

API Invocation in line: 38
Activation('relu', name='Conv2d_2b_3x3_Activation')(x)

API Invocation in line: 40
Conv2D(80, 1, strides=1, padding='valid', use_bias=False, name='Conv2d_3b_1x1')(x)

API Invocation in line: 41
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_3b_1x1_BatchNorm')(x)

API Invocation in line: 42
Activation('relu', name='Conv2d_3b_1x1_Activation')(x)

API Invocation in line: 43
Conv2D(192, 3, strides=1, padding='valid', use_bias=False, name='Conv2d_4a_3x3')(x)

API Invocation in line: 44
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_4a_3x3_BatchNorm')(x)

API Invocation in line: 45
Activation('relu', name='Conv2d_4a_3x3_Activation')(x)

API Invocation in line: 46
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Conv2d_4b_3x3')(x)

API Invocation in line: 47
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_4b_3x3_BatchNorm')(x)

API Invocation in line: 48
Activation('relu', name='Conv2d_4b_3x3_Activation')(x)

API Invocation in line: 51
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 52
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 54
Activation('relu', name='Block35_1_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 55
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 56
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 58
Activation('relu', name='Block35_1_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 59
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 61
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 63
Activation('relu', name='Block35_1_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 64
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 65
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 67
Activation('relu', name='Block35_1_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 68
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 70
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 72
Activation('relu', name='Block35_1_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 73
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 75
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 77
Activation('relu', name='Block35_1_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 80
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_1_Conv2d_1x1')(mixed)

API Invocation in line: 85
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 86
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 88
Activation('relu', name='Block35_2_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 89
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 90
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 92
Activation('relu', name='Block35_2_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 93
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 95
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 97
Activation('relu', name='Block35_2_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 98
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 99
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 101
Activation('relu', name='Block35_2_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 102
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 104
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 106
Activation('relu', name='Block35_2_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 107
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 109
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 111
Activation('relu', name='Block35_2_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 114
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_2_Conv2d_1x1')(mixed)

API Invocation in line: 119
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 120
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 122
Activation('relu', name='Block35_3_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 123
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 124
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 126
Activation('relu', name='Block35_3_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 127
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 129
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 131
Activation('relu', name='Block35_3_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 132
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 133
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 135
Activation('relu', name='Block35_3_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 136
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 138
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 140
Activation('relu', name='Block35_3_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 141
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 143
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 145
Activation('relu', name='Block35_3_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 148
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_3_Conv2d_1x1')(mixed)

API Invocation in line: 153
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 154
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 156
Activation('relu', name='Block35_4_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 157
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 158
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 160
Activation('relu', name='Block35_4_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 161
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 163
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 165
Activation('relu', name='Block35_4_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 166
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 167
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 169
Activation('relu', name='Block35_4_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 170
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 172
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 174
Activation('relu', name='Block35_4_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 175
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 177
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 179
Activation('relu', name='Block35_4_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 182
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_4_Conv2d_1x1')(mixed)

API Invocation in line: 187
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 188
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 190
Activation('relu', name='Block35_5_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 191
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 192
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 194
Activation('relu', name='Block35_5_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 195
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 197
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 199
Activation('relu', name='Block35_5_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 200
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 201
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 203
Activation('relu', name='Block35_5_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 204
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 206
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 208
Activation('relu', name='Block35_5_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 209
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 211
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 213
Activation('relu', name='Block35_5_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 216
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_5_Conv2d_1x1')(mixed)

API Invocation in line: 222
Conv2D(384, 3, strides=2, padding='valid', use_bias=False, name='Mixed_6a_Branch_0_Conv2d_1a_3x3')(x)

API Invocation in line: 223
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_0_Conv2d_1a_3x3_BatchNorm')(branch_0)

API Invocation in line: 225
Activation('relu', name='Mixed_6a_Branch_0_Conv2d_1a_3x3_Activation')(branch_0)

API Invocation in line: 226
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Mixed_6a_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 227
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 229
Activation('relu', name='Mixed_6a_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 230
Conv2D(192, 3, strides=1, padding='same', use_bias=False, name='Mixed_6a_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 232
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 234
Activation('relu', name='Mixed_6a_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 235
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Mixed_6a_Branch_1_Conv2d_1a_3x3')(branch_1)

API Invocation in line: 237
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_1_Conv2d_1a_3x3_BatchNorm')(branch_1)

API Invocation in line: 239
Activation('relu', name='Mixed_6a_Branch_1_Conv2d_1a_3x3_Activation')(branch_1)

API Invocation in line: 245
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_1_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 246
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 248
Activation('relu', name='Block17_1_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 249
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_1_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 250
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 252
Activation('relu', name='Block17_1_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 253
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_1_Branch_1_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 255
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_1_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 257
Activation('relu', name='Block17_1_Branch_1_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 258
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_1_Branch_1_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 260
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_1_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 262
Activation('relu', name='Block17_1_Branch_1_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 265
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_1_Conv2d_1x1')(mixed)

API Invocation in line: 270
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_2_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 271
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 273
Activation('relu', name='Block17_2_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 274
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_2_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 275
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 277
Activation('relu', name='Block17_2_Branch_2_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 278
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_2_Branch_2_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 280
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_2_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 282
Activation('relu', name='Block17_2_Branch_2_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 283
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_2_Branch_2_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 285
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_2_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 287
Activation('relu', name='Block17_2_Branch_2_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 290
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_2_Conv2d_1x1')(mixed)

API Invocation in line: 295
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_3_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 296
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 298
Activation('relu', name='Block17_3_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 299
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_3_Branch_3_Conv2d_0a_1x1')(x)

API Invocation in line: 300
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_3_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 302
Activation('relu', name='Block17_3_Branch_3_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 303
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_3_Branch_3_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 305
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_3_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 307
Activation('relu', name='Block17_3_Branch_3_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 308
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_3_Branch_3_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 310
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_3_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 312
Activation('relu', name='Block17_3_Branch_3_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 315
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_3_Conv2d_1x1')(mixed)

API Invocation in line: 320
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_4_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 321
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 323
Activation('relu', name='Block17_4_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 324
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_4_Branch_4_Conv2d_0a_1x1')(x)

API Invocation in line: 325
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_4_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 327
Activation('relu', name='Block17_4_Branch_4_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 328
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_4_Branch_4_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 330
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_4_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 332
Activation('relu', name='Block17_4_Branch_4_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 333
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_4_Branch_4_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 335
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_4_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 337
Activation('relu', name='Block17_4_Branch_4_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 340
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_4_Conv2d_1x1')(mixed)

API Invocation in line: 345
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_5_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 346
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 348
Activation('relu', name='Block17_5_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 349
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_5_Branch_5_Conv2d_0a_1x1')(x)

API Invocation in line: 350
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_5_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 352
Activation('relu', name='Block17_5_Branch_5_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 353
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_5_Branch_5_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 355
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_5_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 357
Activation('relu', name='Block17_5_Branch_5_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 358
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_5_Branch_5_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 360
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_5_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 362
Activation('relu', name='Block17_5_Branch_5_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 365
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_5_Conv2d_1x1')(mixed)

API Invocation in line: 370
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_6_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 371
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 373
Activation('relu', name='Block17_6_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 374
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_6_Branch_6_Conv2d_0a_1x1')(x)

API Invocation in line: 375
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_6_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 377
Activation('relu', name='Block17_6_Branch_6_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 378
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_6_Branch_6_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 380
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_6_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 382
Activation('relu', name='Block17_6_Branch_6_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 383
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_6_Branch_6_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 385
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_6_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 387
Activation('relu', name='Block17_6_Branch_6_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 390
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_6_Conv2d_1x1')(mixed)

API Invocation in line: 395
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_7_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 396
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 398
Activation('relu', name='Block17_7_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 399
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_7_Branch_7_Conv2d_0a_1x1')(x)

API Invocation in line: 400
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_7_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 402
Activation('relu', name='Block17_7_Branch_7_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 403
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_7_Branch_7_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 405
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_7_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 407
Activation('relu', name='Block17_7_Branch_7_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 408
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_7_Branch_7_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 410
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_7_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 412
Activation('relu', name='Block17_7_Branch_7_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 415
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_7_Conv2d_1x1')(mixed)

API Invocation in line: 420
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_8_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 421
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 423
Activation('relu', name='Block17_8_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 424
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_8_Branch_8_Conv2d_0a_1x1')(x)

API Invocation in line: 425
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_8_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 427
Activation('relu', name='Block17_8_Branch_8_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 428
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_8_Branch_8_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 430
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_8_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 432
Activation('relu', name='Block17_8_Branch_8_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 433
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_8_Branch_8_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 435
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_8_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 437
Activation('relu', name='Block17_8_Branch_8_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 440
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_8_Conv2d_1x1')(mixed)

API Invocation in line: 445
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_9_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 446
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 448
Activation('relu', name='Block17_9_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 449
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_9_Branch_9_Conv2d_0a_1x1')(x)

API Invocation in line: 450
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_9_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 452
Activation('relu', name='Block17_9_Branch_9_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 453
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_9_Branch_9_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 455
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_9_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 457
Activation('relu', name='Block17_9_Branch_9_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 458
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_9_Branch_9_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 460
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_9_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 462
Activation('relu', name='Block17_9_Branch_9_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 465
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_9_Conv2d_1x1')(mixed)

API Invocation in line: 470
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_10_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 471
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 473
Activation('relu', name='Block17_10_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 474
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_10_Branch_10_Conv2d_0a_1x1')(x)

API Invocation in line: 475
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_10_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 477
Activation('relu', name='Block17_10_Branch_10_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 478
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_10_Branch_10_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 480
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_10_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 482
Activation('relu', name='Block17_10_Branch_10_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 483
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_10_Branch_10_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 485
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_10_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 487
Activation('relu', name='Block17_10_Branch_10_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 490
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_10_Conv2d_1x1')(mixed)

API Invocation in line: 496
Conv2D(256, 1, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_0_Conv2d_0a_1x1')(x)

API Invocation in line: 497
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_0_Conv2d_0a_1x1_BatchNorm')(branch_0)

API Invocation in line: 499
Activation('relu', name='Mixed_7a_Branch_0_Conv2d_0a_1x1_Activation')(branch_0)

API Invocation in line: 500
Conv2D(384, 3, strides=2, padding='valid', use_bias=False, name='Mixed_7a_Branch_0_Conv2d_1a_3x3')(branch_0)

API Invocation in line: 502
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_0_Conv2d_1a_3x3_BatchNorm')(branch_0)

API Invocation in line: 504
Activation('relu', name='Mixed_7a_Branch_0_Conv2d_1a_3x3_Activation')(branch_0)

API Invocation in line: 505
Conv2D(256, 1, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 506
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 508
Activation('relu', name='Mixed_7a_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 509
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Mixed_7a_Branch_1_Conv2d_1a_3x3')(branch_1)

API Invocation in line: 511
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_1_Conv2d_1a_3x3_BatchNorm')(branch_1)

API Invocation in line: 513
Activation('relu', name='Mixed_7a_Branch_1_Conv2d_1a_3x3_Activation')(branch_1)

API Invocation in line: 514
Conv2D(256, 1, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 515
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 517
Activation('relu', name='Mixed_7a_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 518
Conv2D(256, 3, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 520
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 522
Activation('relu', name='Mixed_7a_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 523
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Mixed_7a_Branch_2_Conv2d_1a_3x3')(branch_2)

API Invocation in line: 525
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_2_Conv2d_1a_3x3_BatchNorm')(branch_2)

API Invocation in line: 527
Activation('relu', name='Mixed_7a_Branch_2_Conv2d_1a_3x3_Activation')(branch_2)

API Invocation in line: 534
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_1_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 535
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 537
Activation('relu', name='Block8_1_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 538
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_1_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 539
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 541
Activation('relu', name='Block8_1_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 542
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_1_Branch_1_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 544
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_1_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 546
Activation('relu', name='Block8_1_Branch_1_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 547
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_1_Branch_1_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 549
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_1_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 551
Activation('relu', name='Block8_1_Branch_1_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 554
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_1_Conv2d_1x1')(mixed)

API Invocation in line: 559
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_2_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 560
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 562
Activation('relu', name='Block8_2_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 563
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_2_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 564
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 566
Activation('relu', name='Block8_2_Branch_2_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 567
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_2_Branch_2_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 569
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_2_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 571
Activation('relu', name='Block8_2_Branch_2_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 572
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_2_Branch_2_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 574
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_2_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 576
Activation('relu', name='Block8_2_Branch_2_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 579
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_2_Conv2d_1x1')(mixed)

API Invocation in line: 584
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_3_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 585
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 587
Activation('relu', name='Block8_3_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 588
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_3_Branch_3_Conv2d_0a_1x1')(x)

API Invocation in line: 589
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_3_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 591
Activation('relu', name='Block8_3_Branch_3_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 592
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_3_Branch_3_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 594
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_3_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 596
Activation('relu', name='Block8_3_Branch_3_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 597
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_3_Branch_3_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 599
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_3_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 601
Activation('relu', name='Block8_3_Branch_3_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 604
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_3_Conv2d_1x1')(mixed)

API Invocation in line: 609
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_4_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 610
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 612
Activation('relu', name='Block8_4_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 613
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_4_Branch_4_Conv2d_0a_1x1')(x)

API Invocation in line: 614
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_4_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 616
Activation('relu', name='Block8_4_Branch_4_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 617
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_4_Branch_4_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 619
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_4_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 621
Activation('relu', name='Block8_4_Branch_4_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 622
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_4_Branch_4_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 624
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_4_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 626
Activation('relu', name='Block8_4_Branch_4_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 629
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_4_Conv2d_1x1')(mixed)

API Invocation in line: 634
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_5_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 635
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 637
Activation('relu', name='Block8_5_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 638
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_5_Branch_5_Conv2d_0a_1x1')(x)

API Invocation in line: 639
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_5_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 641
Activation('relu', name='Block8_5_Branch_5_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 642
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_5_Branch_5_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 644
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_5_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 646
Activation('relu', name='Block8_5_Branch_5_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 647
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_5_Branch_5_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 649
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_5_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 651
Activation('relu', name='Block8_5_Branch_5_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 654
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_5_Conv2d_1x1')(mixed)

API Invocation in line: 659
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_6_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 660
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 662
Activation('relu', name='Block8_6_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 663
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_6_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 664
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 666
Activation('relu', name='Block8_6_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 667
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_6_Branch_1_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 669
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_1_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 671
Activation('relu', name='Block8_6_Branch_1_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 672
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_6_Branch_1_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 674
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_1_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 676
Activation('relu', name='Block8_6_Branch_1_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 679
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_6_Conv2d_1x1')(mixed)


----------------
Github Link: git://github.com/p-syd/social-distancing-ml.git
Repository: p-syd/social-distancing-ml
File path: Ultimate_Social_Distancing/load_model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/theGreenJedi/fast.git
Repository: theGreenJedi/fast
File path: fastai_repo/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 189
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 193
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 195
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 196
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 197
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 199
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/PhilippeMarcotte/HW4_IFT6390.git
Repository: PhilippeMarcotte/HW4_IFT6390
File path: CNNsEnsemble/inceptionv4.py
API Invocation in line: 43
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 64
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 101
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 115
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 146
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 168
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 230
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 232
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 233
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 234
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 236
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 237
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 238
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 239
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 240
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/amansman77/practice-python-kafka.git
Repository: amansman77/practice-python-kafka
File path: video/models/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/bernardab/flu-cast.git
Repository: bernardab/flu-cast
File path: utils/fastai/models/inceptionresnetv2.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 63
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 76
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 94
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 126
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 177
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 185
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 204
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 205
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 206
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 208
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 209
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 260
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/samik1986/ML_Semantic_Segmenation_NMI.git
Repository: samik1986/ML_Semantic_Segmenation_NMI
File path: morse_code/pytorch_zoo/inception.py
API Invocation in line: 29
BasicConv2d(3, 32, kernel_size=3, stride=2, padding=1)

API Invocation in line: 30
BasicConv2d(32, 32, kernel_size=3, padding=1)

API Invocation in line: 31
BasicConv2d(32, 64, kernel_size=3, padding=1)

API Invocation in line: 32
BasicConv2d(64, 80, kernel_size=1)

API Invocation in line: 33
BasicConv2d(80, 192, kernel_size=3, padding=1)

API Invocation in line: 63
self.Conv2d_1a_3x3(x)

API Invocation in line: 65
self.Conv2d_2a_3x3(x)

API Invocation in line: 67
self.Conv2d_2b_3x3(x)

API Invocation in line: 71
self.Conv2d_3b_1x1(x)

API Invocation in line: 73
self.Conv2d_4a_3x3(x)

API Invocation in line: 106
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 108
BasicConv2d(in_channels, 48, kernel_size=1)

API Invocation in line: 109
BasicConv2d(48, 64, kernel_size=5, padding=2)

API Invocation in line: 111
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 112
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 113
BasicConv2d(96, 96, kernel_size=3, padding=1)

API Invocation in line: 115
BasicConv2d(in_channels, pool_features, kernel_size=1)

API Invocation in line: 138
BasicConv2d(in_channels, 384, kernel_size=3, stride=2, padding=1)

API Invocation in line: 140
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 141
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 142
BasicConv2d(96, 96, kernel_size=3, stride=2, padding=1)

API Invocation in line: 161
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 164
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 165
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 166
BasicConv2d(c7, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 168
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 169
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 170
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 171
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 172
BasicConv2d(c7, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 174
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 200
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 201
BasicConv2d(192, 320, kernel_size=3, stride=2, padding=1)

API Invocation in line: 203
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 204
BasicConv2d(192, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 205
BasicConv2d(192, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 206
BasicConv2d(192, 192, kernel_size=3, stride=2, padding=1)

API Invocation in line: 226
BasicConv2d(in_channels, 320, kernel_size=1)

API Invocation in line: 228
BasicConv2d(in_channels, 384, kernel_size=1)

API Invocation in line: 229
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 230
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 232
BasicConv2d(in_channels, 448, kernel_size=1)

API Invocation in line: 233
BasicConv2d(448, 384, kernel_size=3, padding=1)

API Invocation in line: 234
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 235
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 237
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 268
nn.Conv2d(in_channels, out_channels, bias=False, **kwargs)


----------------
Github Link: git://github.com/longyin880815/STCNN.git
Repository: longyin880815/STCNN
File path: network/googlenet.py
API Invocation in line: 17
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 18
BasicConv2d(32, 32, kernel_size=3)

API Invocation in line: 19
BasicConv2d(32, 64, kernel_size=3, padding=1)

API Invocation in line: 20
BasicConv2d(64, 80, kernel_size=1)

API Invocation in line: 21
BasicConv2d(80, 192, kernel_size=3)

API Invocation in line: 56
self.Conv2d_1a_3x3(x)

API Invocation in line: 58
self.Conv2d_2a_3x3(x)

API Invocation in line: 60
self.Conv2d_2b_3x3(x)

API Invocation in line: 64
self.Conv2d_3b_1x1(x)

API Invocation in line: 66
self.Conv2d_4a_3x3(x)

API Invocation in line: 113
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 115
BasicConv2d(in_channels, 48, kernel_size=1)

API Invocation in line: 116
BasicConv2d(48, 64, kernel_size=5, padding=2)

API Invocation in line: 118
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 119
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 120
BasicConv2d(96, 96, kernel_size=3, padding=1)

API Invocation in line: 122
BasicConv2d(in_channels, pool_features, kernel_size=1)

API Invocation in line: 145
BasicConv2d(in_channels, 384, kernel_size=3, stride=2)

API Invocation in line: 147
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 148
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 149
BasicConv2d(96, 96, kernel_size=3, stride=2)

API Invocation in line: 168
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 171
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 172
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 173
BasicConv2d(c7, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 175
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 176
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 177
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 178
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 179
BasicConv2d(c7, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 181
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 207
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 208
BasicConv2d(192, 320, kernel_size=3, stride=2)

API Invocation in line: 210
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 211
BasicConv2d(192, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 212
BasicConv2d(192, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 213
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 233
BasicConv2d(in_channels, 320, kernel_size=1)

API Invocation in line: 235
BasicConv2d(in_channels, 384, kernel_size=1)

API Invocation in line: 236
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 237
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 239
BasicConv2d(in_channels, 448, kernel_size=1)

API Invocation in line: 240
BasicConv2d(448, 384, kernel_size=3, padding=1)

API Invocation in line: 241
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 242
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 244
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 275
BasicConv2d(in_channels, 128, kernel_size=1)

API Invocation in line: 276
BasicConv2d(128, 768, kernel_size=5)

API Invocation in line: 300
nn.Conv2d(in_channels, out_channels, bias=False, **kwargs)


----------------
Github Link: git://github.com/zczeng333/Defect-Detection.git
Repository: zczeng333/Defect-Detection
File path: User Interface/model_v4.py
API Invocation in line: 38
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 59
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 96
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 110
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 141
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 163
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 225
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 227
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 228
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 229
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 231
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 232
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 233
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 234
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 235
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/amansman77/practice-python-kafka.git
Repository: amansman77/practice-python-kafka
File path: video/load_model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/atulsingh0/DeepLearning.git
Repository: atulsingh0/DeepLearning
File path: fastai_ml/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 189
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 193
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 195
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 196
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 197
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 199
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/thommiano/hear-and-see_peerj.git
Repository: thommiano/hear-and-see_peerj
File path: src/deepdream/inception_full.py
API Invocation in line: 38
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 39
BasicConv2d(32, 32, kernel_size=3)

API Invocation in line: 40
BasicConv2d(32, 64, kernel_size=3, padding=1)

API Invocation in line: 41
BasicConv2d(64, 80, kernel_size=1)

API Invocation in line: 42
BasicConv2d(80, 192, kernel_size=3)

API Invocation in line: 113
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 115
BasicConv2d(in_channels, 48, kernel_size=1)

API Invocation in line: 116
BasicConv2d(48, 64, kernel_size=5, padding=2)

API Invocation in line: 118
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 119
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 120
BasicConv2d(96, 96, kernel_size=3, padding=1)

API Invocation in line: 122
BasicConv2d(in_channels, pool_features, kernel_size=1)

API Invocation in line: 146
BasicConv2d(in_channels, 384, kernel_size=3, stride=2)

API Invocation in line: 148
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 149
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 150
BasicConv2d(96, 96, kernel_size=3, stride=2)

API Invocation in line: 169
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 172
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 173
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 174
BasicConv2d(c7, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 176
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 177
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 178
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 179
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 180
BasicConv2d(c7, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 182
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 208
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 209
BasicConv2d(192, 320, kernel_size=3, stride=2)

API Invocation in line: 211
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 212
BasicConv2d(192, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 213
BasicConv2d(192, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 214
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 234
BasicConv2d(in_channels, 320, kernel_size=1)

API Invocation in line: 236
BasicConv2d(in_channels, 384, kernel_size=1)

API Invocation in line: 237
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 238
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 240
BasicConv2d(in_channels, 448, kernel_size=1)

API Invocation in line: 241
BasicConv2d(448, 384, kernel_size=3, padding=1)

API Invocation in line: 242
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 243
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 245
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 276
BasicConv2d(in_channels, 128, kernel_size=1)

API Invocation in line: 277
BasicConv2d(128, 768, kernel_size=5)

API Invocation in line: 301
nn.Conv2d(in_channels, out_channels, bias=False, **kwargs)


----------------
Github Link: git://github.com/kelvinliu04/pytorch_mobilenetssd.git
Repository: kelvinliu04/pytorch_mobilenetssd
File path: vision/ssd/fpn_mobilenetv1_ssd.py
API Invocation in line: 14
Conv2d(in_channels=512, out_channels=256, kernel_size=1)

API Invocation in line: 15
Conv2d(in_channels=1024, out_channels=256, kernel_size=1)


----------------
Github Link: git://github.com/caiyueliang/CarPlatePointsDetect.git
Repository: caiyueliang/CarPlatePointsDetect
File path: models/model_inception.py
API Invocation in line: 40
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 41
BasicConv2d(32, 32, kernel_size=3)

API Invocation in line: 42
BasicConv2d(32, 64, kernel_size=3, padding=1)

API Invocation in line: 43
BasicConv2d(64, 80, kernel_size=1)

API Invocation in line: 44
BasicConv2d(80, 192, kernel_size=3)

API Invocation in line: 79
self.Conv2d_1a_3x3(x)

API Invocation in line: 81
self.Conv2d_2a_3x3(x)

API Invocation in line: 83
self.Conv2d_2b_3x3(x)

API Invocation in line: 87
self.Conv2d_3b_1x1(x)

API Invocation in line: 89
self.Conv2d_4a_3x3(x)

API Invocation in line: 135
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 137
BasicConv2d(in_channels, 48, kernel_size=1)

API Invocation in line: 138
BasicConv2d(48, 64, kernel_size=5, padding=2)

API Invocation in line: 140
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 141
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 142
BasicConv2d(96, 96, kernel_size=3, padding=1)

API Invocation in line: 144
BasicConv2d(in_channels, pool_features, kernel_size=1)

API Invocation in line: 167
BasicConv2d(in_channels, 384, kernel_size=3, stride=2)

API Invocation in line: 169
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 170
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 171
BasicConv2d(96, 96, kernel_size=3, stride=2)

API Invocation in line: 190
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 193
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 194
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 195
BasicConv2d(c7, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 197
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 198
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 199
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 200
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 201
BasicConv2d(c7, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 203
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 229
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 230
BasicConv2d(192, 320, kernel_size=3, stride=2)

API Invocation in line: 232
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 233
BasicConv2d(192, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 234
BasicConv2d(192, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 235
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 255
BasicConv2d(in_channels, 320, kernel_size=1)

API Invocation in line: 257
BasicConv2d(in_channels, 384, kernel_size=1)

API Invocation in line: 258
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 259
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 261
BasicConv2d(in_channels, 448, kernel_size=1)

API Invocation in line: 262
BasicConv2d(448, 384, kernel_size=3, padding=1)

API Invocation in line: 263
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 264
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 266
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 297
BasicConv2d(in_channels, 128, kernel_size=1)

API Invocation in line: 298
BasicConv2d(128, 768, kernel_size=5)

API Invocation in line: 322
nn.Conv2d(in_channels, out_channels, bias=False, **kwargs)


----------------
Github Link: git://github.com/bearpelican/fastai_imagenet.git
Repository: bearpelican/fastai_imagenet
File path: imagenet_nv/models/inceptionresnetv2.py
API Invocation in line: 11
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 26
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 59
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 72
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 90
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 114
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 122
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 173
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 181
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 200
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 201
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 202
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 204
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 205
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 256
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/davidbau/dissect.git
Repository: davidbau/dissect
File path: experiment/oldresnet152.py
API Invocation in line: 41
nn.Conv2d(3, 64, (7, 7), (2, 2), (3, 3), 1, 1, bias=False)


----------------
Github Link: git://github.com/ehsanShahmi/Nurture-AI-course.git
Repository: ehsanShahmi/Nurture-AI-course
File path: Other Importants/fastai/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 189
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 193
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 195
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 196
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 197
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 199
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/vamvictor/Centinela-Nerf.git
Repository: vamvictor/Centinela-Nerf
File path: Aplicacion/models/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/rojolocco/docker-chestxray.git
Repository: rojolocco/docker-chestxray
File path: flask/app/arch/chestXray/inceptionv4A.py
API Invocation in line: 41
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 62
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 99
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 113
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 144
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 166
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 228
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 230
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 231
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 232
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 234
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 235
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 236
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 237
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 238
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/k3larra/interactiveML.git
Repository: k3larra/interactiveML
File path: fastaiold/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/Tetrix/iNaturalist-API.git
Repository: Tetrix/iNaturalist-API
File path: inception.py
API Invocation in line: 42
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 43
BasicConv2d(32, 32, kernel_size=3)

API Invocation in line: 44
BasicConv2d(32, 64, kernel_size=3, padding=1)

API Invocation in line: 45
BasicConv2d(64, 80, kernel_size=1)

API Invocation in line: 46
BasicConv2d(80, 192, kernel_size=3)

API Invocation in line: 81
self.Conv2d_1a_3x3(x)

API Invocation in line: 83
self.Conv2d_2a_3x3(x)

API Invocation in line: 85
self.Conv2d_2b_3x3(x)

API Invocation in line: 89
self.Conv2d_3b_1x1(x)

API Invocation in line: 91
self.Conv2d_4a_3x3(x)

API Invocation in line: 138
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 140
BasicConv2d(in_channels, 48, kernel_size=1)

API Invocation in line: 141
BasicConv2d(48, 64, kernel_size=5, padding=2)

API Invocation in line: 143
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 144
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 145
BasicConv2d(96, 96, kernel_size=3, padding=1)

API Invocation in line: 147
BasicConv2d(in_channels, pool_features, kernel_size=1)

API Invocation in line: 170
BasicConv2d(in_channels, 384, kernel_size=3, stride=2)

API Invocation in line: 172
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 173
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 174
BasicConv2d(96, 96, kernel_size=3, stride=2)

API Invocation in line: 193
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 196
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 197
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 198
BasicConv2d(c7, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 200
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 201
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 202
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 203
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 204
BasicConv2d(c7, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 206
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 232
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 233
BasicConv2d(192, 320, kernel_size=3, stride=2)

API Invocation in line: 235
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 236
BasicConv2d(192, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 237
BasicConv2d(192, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 238
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 258
BasicConv2d(in_channels, 320, kernel_size=1)

API Invocation in line: 260
BasicConv2d(in_channels, 384, kernel_size=1)

API Invocation in line: 261
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 262
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 264
BasicConv2d(in_channels, 448, kernel_size=1)

API Invocation in line: 265
BasicConv2d(448, 384, kernel_size=3, padding=1)

API Invocation in line: 266
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 267
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 269
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 300
BasicConv2d(in_channels, 128, kernel_size=1)

API Invocation in line: 301
BasicConv2d(128, 768, kernel_size=5)

API Invocation in line: 325
nn.Conv2d(in_channels, out_channels, bias=False, **kwargs)


----------------
Github Link: git://github.com/BraunAvi/food36.git
Repository: BraunAvi/food36
File path: fastai/models/inceptionresnetv2.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 63
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 76
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 94
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 126
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 177
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 185
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 204
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 205
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 206
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 208
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 209
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 260
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/HCyangke/flaskdemo.git
Repository: HCyangke/flaskdemo
File path: tf_model_zoo/inceptionresnetv2/pytorch_load.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 63
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 76
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 94
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 126
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 177
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 185
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 204
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 205
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 206
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 208
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 209
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 260
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/LiliMeng/TRN-pytorch.git
Repository: LiliMeng/TRN-pytorch
File path: model_zoo/inceptionresnetv2/pytorch_load.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 63
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 76
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 94
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 126
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 177
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 185
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 204
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 205
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 206
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 208
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 209
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 260
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/agoila/fastai-dl.git
Repository: agoila/fastai-dl
File path: fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 189
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 193
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 195
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 196
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 197
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 199
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/rohitashwa1907/fastai.git
Repository: rohitashwa1907/fastai
File path: old/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/codehArt/FMD-covid-19.git
Repository: codehArt/FMD-covid-19
File path: load_model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/beaku/fastai.git
Repository: beaku/fastai
File path: old/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/swaroop9ai9/Covid-Face-MasK-Detection.git
Repository: swaroop9ai9/Covid-Face-MasK-Detection
File path: Models/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/klee137/wildlife_in_uiuc.git
Repository: klee137/wildlife_in_uiuc
File path: inference/assets/efficient_net_b0.py
API Invocation in line: 9
nn.Conv2d(1, 32, 3, padding=1, stride=2)


----------------
Github Link: git://github.com/codehArt/FMD-covid-19.git
Repository: codehArt/FMD-covid-19
File path: models/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/josetxu1974/FACE_MASK_DETECTOR.git
Repository: josetxu1974/FACE_MASK_DETECTOR
File path: MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/LiliMeng/TRN-pytorch.git
Repository: LiliMeng/TRN-pytorch
File path: model_zoo/inceptionv4/pytorch_load.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 189
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 193
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 195
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 196
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 197
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 199
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/klee137/wildlife_in_uiuc.git
Repository: klee137/wildlife_in_uiuc
File path: model/efficient_net/efficient_net_b0.py
API Invocation in line: 9
nn.Conv2d(1, 32, 3, padding=1, stride=2)


----------------
Github Link: git://github.com/riccardobernardi/MLL-machine-learning-language.git
Repository: riccardobernardi/MLL-machine-learning-language
File path: resnetv2-fastai.py
API Invocation in line: 12
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 29
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 63
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 76
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 95
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 120
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 128
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 181
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 189
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 208
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 209
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 210
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 212
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 213
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 264
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/tommywu052/Thermal_MaskAI_mirror.git
Repository: tommywu052/Thermal_MaskAI_mirror
File path: Jetson/AI_AICare/FaceMaskDetection/load_model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/ccny-ros-pkg/pytorch_Concrete_Inspection.git
Repository: ccny-ros-pkg/pytorch_Concrete_Inspection
File path: models/inception.py
API Invocation in line: 47
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 48
BasicConv2d(32, 32, kernel_size=3)

API Invocation in line: 49
BasicConv2d(32, 64, kernel_size=3, padding=1)

API Invocation in line: 50
BasicConv2d(64, 80, kernel_size=1)

API Invocation in line: 51
BasicConv2d(80, 192, kernel_size=3)

API Invocation in line: 86
self.Conv2d_1a_3x3(x)

API Invocation in line: 88
self.Conv2d_2a_3x3(x)

API Invocation in line: 90
self.Conv2d_2b_3x3(x)

API Invocation in line: 94
self.Conv2d_3b_1x1(x)

API Invocation in line: 96
self.Conv2d_4a_3x3(x)

API Invocation in line: 142
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 144
BasicConv2d(in_channels, 48, kernel_size=1)

API Invocation in line: 145
BasicConv2d(48, 64, kernel_size=5, padding=2)

API Invocation in line: 147
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 148
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 149
BasicConv2d(96, 96, kernel_size=3, padding=1)

API Invocation in line: 151
BasicConv2d(in_channels, pool_features, kernel_size=1)

API Invocation in line: 174
BasicConv2d(in_channels, 384, kernel_size=3, stride=2)

API Invocation in line: 176
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 177
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 178
BasicConv2d(96, 96, kernel_size=3, stride=2)

API Invocation in line: 197
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 200
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 201
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 202
BasicConv2d(c7, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 204
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 205
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 206
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 207
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 208
BasicConv2d(c7, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 210
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 236
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 237
BasicConv2d(192, 320, kernel_size=3, stride=2)

API Invocation in line: 239
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 240
BasicConv2d(192, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 241
BasicConv2d(192, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 242
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 262
BasicConv2d(in_channels, 320, kernel_size=1)

API Invocation in line: 264
BasicConv2d(in_channels, 384, kernel_size=1)

API Invocation in line: 265
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 266
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 268
BasicConv2d(in_channels, 448, kernel_size=1)

API Invocation in line: 269
BasicConv2d(448, 384, kernel_size=3, padding=1)

API Invocation in line: 270
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 271
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 273
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 304
BasicConv2d(in_channels, 128, kernel_size=1)

API Invocation in line: 305
BasicConv2d(128, 768, kernel_size=5)

API Invocation in line: 329
nn.Conv2d(in_channels, out_channels, bias=False, **kwargs)


----------------
Github Link: git://github.com/OmkarShidore/YOLOv3Model.git
Repository: OmkarShidore/YOLOv3Model
File path: darknet_yolo_v3.py
API Invocation in line: 77
nn.Conv2d(in_channels=in_channels, out_channels=out_channels, kernel_size=kernel_size, stride=stride, padding=padding)

API Invocation in line: 102
nn.Conv2d(in_channels=in_channels, out_channels=out_channels, kernel_size=kernel_size, stride=stride)

API Invocation in line: 106
self.Conv2d(x)

API Invocation in line: 126
BasicConv2d_bn(3, 32, 3, 1)

API Invocation in line: 127
BasicConv2d_bn(32, 64, 3, 2)

API Invocation in line: 128
BasicConv2d_bn(64, 32, 1, 1)

API Invocation in line: 129
BasicConv2d_bn(32, 64, 3, 1)

API Invocation in line: 131
BasicConv2d_bn(64, 128, 3, 2)

API Invocation in line: 132
BasicConv2d_bn(128, 64, 1, 1)

API Invocation in line: 133
BasicConv2d_bn(64, 128, 3, 1)

API Invocation in line: 135
BasicConv2d_bn(128, 64, 1, 1)

API Invocation in line: 136
BasicConv2d_bn(64, 128, 3, 1)

API Invocation in line: 138
BasicConv2d_bn(128, 256, 3, 2)

API Invocation in line: 139
BasicConv2d_bn(256, 128, 1, 1)

API Invocation in line: 140
BasicConv2d_bn(128, 256, 3, 1)

API Invocation in line: 142
BasicConv2d_bn(256, 128, 1, 1)

API Invocation in line: 143
BasicConv2d_bn(128, 256, 3, 1)

API Invocation in line: 145
BasicConv2d_bn(256, 128, 1, 1)

API Invocation in line: 146
BasicConv2d_bn(128, 256, 3, 1)

API Invocation in line: 148
BasicConv2d_bn(256, 128, 1, 1)

API Invocation in line: 149
BasicConv2d_bn(128, 256, 3, 1)

API Invocation in line: 151
BasicConv2d_bn(256, 128, 1, 1)

API Invocation in line: 152
BasicConv2d_bn(128, 256, 3, 1)

API Invocation in line: 154
BasicConv2d_bn(256, 128, 1, 1)

API Invocation in line: 155
BasicConv2d_bn(128, 256, 3, 1)

API Invocation in line: 157
BasicConv2d_bn(256, 128, 1, 1)

API Invocation in line: 158
BasicConv2d_bn(128, 256, 3, 1)

API Invocation in line: 160
BasicConv2d_bn(256, 128, 1, 1)

API Invocation in line: 161
BasicConv2d_bn(128, 256, 3, 1)

API Invocation in line: 163
BasicConv2d_bn(256, 512, 3, 2)

API Invocation in line: 164
BasicConv2d_bn(512, 256, 1, 1)

API Invocation in line: 165
BasicConv2d_bn(256, 512, 3, 1)

API Invocation in line: 167
BasicConv2d_bn(512, 1024, 1, 1)

API Invocation in line: 168
BasicConv2d_bn(1024, 512, 3, 1)

API Invocation in line: 170
BasicConv2d_bn(512, 1024, 1, 1)

API Invocation in line: 171
BasicConv2d_bn(1024, 512, 3, 1)

API Invocation in line: 173
BasicConv2d_bn(512, 1024, 1, 1)

API Invocation in line: 174
BasicConv2d_bn(1024, 512, 3, 1)

API Invocation in line: 176
BasicConv2d_bn(512, 256, 1, 1)

API Invocation in line: 177
BasicConv2d_bn(256, 512, 3, 1)

API Invocation in line: 179
BasicConv2d_bn(512, 1024, 1, 1)

API Invocation in line: 180
BasicConv2d_bn(1024, 512, 3, 1)

API Invocation in line: 182
BasicConv2d_bn(512, 1024, 1, 1)

API Invocation in line: 183
BasicConv2d_bn(1024, 512, 3, 1)

API Invocation in line: 185
BasicConv2d_bn(512, 1024, 1, 1)

API Invocation in line: 186
BasicConv2d_bn(1024, 512, 3, 1)

API Invocation in line: 188
BasicConv2d_bn(512, 1024, 3, 2)

API Invocation in line: 189
BasicConv2d_bn(1024, 512, 1, 1)

API Invocation in line: 190
BasicConv2d_bn(512, 1024, 3, 1)

API Invocation in line: 192
BasicConv2d_bn(1024, 512, 1, 1)

API Invocation in line: 193
BasicConv2d_bn(512, 1024, 3, 1)

API Invocation in line: 195
BasicConv2d_bn(1024, 512, 1, 1)

API Invocation in line: 196
BasicConv2d_bn(512, 1024, 3, 1)

API Invocation in line: 198
BasicConv2d_bn(1024, 512, 1, 1)

API Invocation in line: 199
BasicConv2d_bn(512, 1024, 3, 1)

API Invocation in line: 201
BasicConv2d_bn(1024, 512, 1, 1)

API Invocation in line: 202
BasicConv2d_bn(512, 1024, 3, 1)

API Invocation in line: 203
BasicConv2d_bn(1024, 512, 1, 1)

API Invocation in line: 204
BasicConv2d_bn(512, 1024, 3, 1)

API Invocation in line: 205
BasicConv2d_bn(1024, 512, 1, 1)

API Invocation in line: 206
BasicConv2d_bn(512, 1024, 3, 1)

API Invocation in line: 208
BasicConv2d(512, 256, 1, 1)

API Invocation in line: 210
BasicConv2d_bn(768, 256, 1, 1)

API Invocation in line: 211
BasicConv2d_bn(256, 512, 1, 1)

API Invocation in line: 212
BasicConv2d_bn(512, 256, 1, 1)

API Invocation in line: 213
BasicConv2d_bn(256, 512, 3, 1)

API Invocation in line: 214
BasicConv2d_bn(512, 256, 1, 1)

API Invocation in line: 215
BasicConv2d_bn(256, 512, 3, 1)

API Invocation in line: 218
BasicConv2d_bn(256, 128, 1, 1)

API Invocation in line: 221
BasicConv2d_bn(384, 128, 1, 1)

API Invocation in line: 222
BasicConv2d_bn(128, 256, 3, 1)

API Invocation in line: 223
BasicConv2d_bn(256, 128, 1, 1)

API Invocation in line: 224
BasicConv2d_bn(128, 256, 3, 1)

API Invocation in line: 225
BasicConv2d_bn(256, 128, 1, 1)

API Invocation in line: 226
BasicConv2d_bn(128, 256, 3, 1)

API Invocation in line: 236
BasicConv2d(256, detection_depth, 1, 1)

API Invocation in line: 237
BasicConv2d(512, detection_depth, 1, 1)

API Invocation in line: 238
BasicConv2d(1024, detection_depth, 1, 1)

API Invocation in line: 248
self.Conv2d_1(x)

API Invocation in line: 249
self.Conv2d_2(x)

API Invocation in line: 250
self.Conv2d_3(x)

API Invocation in line: 251
self.Conv2d_4(x)

API Invocation in line: 254
self.Conv2d_5(x)

API Invocation in line: 255
self.Conv2d_6(x)

API Invocation in line: 256
self.Conv2d_7(x)

API Invocation in line: 259
self.Conv2d_8(x)

API Invocation in line: 260
self.Conv2d_9(x)

API Invocation in line: 263
self.Conv2d_10(x)

API Invocation in line: 264
self.Conv2d_11(x)

API Invocation in line: 265
self.Conv2d_12(x)

API Invocation in line: 268
self.Conv2d_13(x)

API Invocation in line: 269
self.Conv2d_14(x)

API Invocation in line: 272
self.Conv2d_15(x)

API Invocation in line: 273
self.Conv2d_16(x)

API Invocation in line: 276
self.Conv2d_17(x)

API Invocation in line: 277
self.Conv2d_18(x)

API Invocation in line: 280
self.Conv2d_19(x)

API Invocation in line: 281
self.Conv2d_20(x)

API Invocation in line: 284
self.Conv2d_21(x)

API Invocation in line: 285
self.Conv2d_22(x)

API Invocation in line: 288
self.Conv2d_23(x)

API Invocation in line: 289
self.Conv2d_24(x)

API Invocation in line: 292
self.Conv2d_25(x)

API Invocation in line: 293
self.Conv2d_26(x)

API Invocation in line: 296
self.Conv2d_27(x)

API Invocation in line: 297
self.Conv2d_28(x)

API Invocation in line: 298
self.Conv2d_29(x)

API Invocation in line: 301
self.Conv2d_30(x)

API Invocation in line: 302
self.Conv2d_31(x)

API Invocation in line: 305
self.Conv2d_32(x)

API Invocation in line: 306
self.Conv2d_33(x)

API Invocation in line: 309
self.Conv2d_34(x)

API Invocation in line: 310
self.Conv2d_35(x)

API Invocation in line: 313
self.Conv2d_36(x)

API Invocation in line: 314
self.Conv2d_37(x)

API Invocation in line: 317
self.Conv2d_38(x)

API Invocation in line: 318
self.Conv2d_39(x)

API Invocation in line: 321
self.Conv2d_40(x)

API Invocation in line: 322
self.Conv2d_41(x)

API Invocation in line: 325
self.Conv2d_42(x)

API Invocation in line: 326
self.Conv2d_43(x)

API Invocation in line: 329
self.Conv2d_44(x)

API Invocation in line: 330
self.Conv2d_45(x)

API Invocation in line: 331
self.Conv2d_46(x)

API Invocation in line: 334
self.Conv2d_47(x)

API Invocation in line: 335
self.Conv2d_48(x)

API Invocation in line: 338
self.Conv2d_49(x)

API Invocation in line: 339
self.Conv2d_50(x)

API Invocation in line: 342
self.Conv2d_51(x)

API Invocation in line: 343
self.Conv2d_52(x)

API Invocation in line: 346
self.Conv2d_53(x)

API Invocation in line: 347
self.Conv2d_54(x)

API Invocation in line: 350
self.Conv2d_55(x)

API Invocation in line: 351
self.Conv2d_56(x)

API Invocation in line: 353
self.Conv2d_57(x)

API Invocation in line: 354
self.Conv2d_58(x)

API Invocation in line: 356
self.Conv2d_out1(x)

API Invocation in line: 358
self.Conv2d_59(route0)

API Invocation in line: 362
self.Conv2d_60(x)

API Invocation in line: 363
self.Conv2d_61(x)

API Invocation in line: 364
self.Conv2d_62(x)

API Invocation in line: 365
self.Conv2d_63(x)

API Invocation in line: 366
self.Conv2d_64(x)

API Invocation in line: 367
self.Conv2d_65(x)

API Invocation in line: 369
self.Conv2d_out2(x)

API Invocation in line: 371
self.Conv2d_66(route2)

API Invocation in line: 376
self.Conv2d_67(x)

API Invocation in line: 377
self.Conv2d_68(x)

API Invocation in line: 378
self.Conv2d_69(x)

API Invocation in line: 379
self.Conv2d_70(x)

API Invocation in line: 380
self.Conv2d_71(x)

API Invocation in line: 381
self.Conv2d_72(x)

API Invocation in line: 383
self.Conv2d_out3(x)


----------------
Github Link: git://github.com/ch301292/fastai_old.git
Repository: ch301292/fastai_old
File path: fastai-master/old/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/RobZuazua/skin-lesion-challenge.git
Repository: RobZuazua/skin-lesion-challenge
File path: old/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/tyfei216/bioinformatics_classification.git
Repository: tyfei216/bioinformatics_classification
File path: models/inceptionv4.py
API Invocation in line: 18
nn.Conv2d(input_channels, output_channels, bias=False, **kwargs)

API Invocation in line: 42
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 58
BasicConv2d(192, 192, kernel_size=3, stride=1, padding=1)

API Invocation in line: 103
BasicConv2d(input_channels, 96, kernel_size=1)

API Invocation in line: 137
BasicConv2d(input_channels, n, kernel_size=3, stride=2)

API Invocation in line: 172
BasicConv2d(input_channels, 384, kernel_size=1)

API Invocation in line: 234
BasicConv2d(512, 256, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 235
BasicConv2d(512, 256, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 237
BasicConv2d(input_channels, 384, kernel_size=1)

API Invocation in line: 238
BasicConv2d(384, 256, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 239
BasicConv2d(384, 256, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 241
BasicConv2d(input_channels, 256, kernel_size=1)

API Invocation in line: 336
BasicConv2d(input_channels, 32, kernel_size=1)

API Invocation in line: 338
nn.Conv2d(128, 384, kernel_size=1)

API Invocation in line: 339
nn.Conv2d(input_channels, 384, kernel_size=1)

API Invocation in line: 373
BasicConv2d(input_channels, 192, kernel_size=1)

API Invocation in line: 375
nn.Conv2d(384, 1154, kernel_size=1)

API Invocation in line: 376
nn.Conv2d(input_channels, 1154, kernel_size=1)

API Invocation in line: 414
BasicConv2d(input_channels, 192, kernel_size=1)

API Invocation in line: 415
nn.Conv2d(448, 2048, kernel_size=1)

API Invocation in line: 416
nn.Conv2d(input_channels, 2048, kernel_size=1)

API Invocation in line: 452
BasicConv2d(input_channels, n, kernel_size=3, stride=2)


----------------
Github Link: git://github.com/JuanFuriaz/donkey_share.git
Repository: JuanFuriaz/donkey_share
File path: styleaug/stylePredictor.py
API Invocation in line: 10
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 11
BasicConv2d(32, 32, kernel_size=3)

API Invocation in line: 12
BasicConv2d(32, 64, kernel_size=3, padding=1)

API Invocation in line: 13
BasicConv2d(64, 80, kernel_size=1)

API Invocation in line: 14
BasicConv2d(80, 192, kernel_size=3)

API Invocation in line: 44
self.Conv2d_1a_3x3(x)

API Invocation in line: 45
self.Conv2d_2a_3x3(x)

API Invocation in line: 46
self.Conv2d_2b_3x3(x)

API Invocation in line: 48
self.Conv2d_3b_1x1(x)

API Invocation in line: 49
self.Conv2d_4a_3x3(x)

API Invocation in line: 74
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 76
BasicConv2d(in_channels, 48, kernel_size=1)

API Invocation in line: 77
BasicConv2d(48, 64, kernel_size=5, padding=2)

API Invocation in line: 79
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 80
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 81
BasicConv2d(96, 96, kernel_size=3, padding=1)

API Invocation in line: 83
BasicConv2d(in_channels, pool_features, kernel_size=1)

API Invocation in line: 106
BasicConv2d(in_channels, 384, kernel_size=3, stride=2)

API Invocation in line: 108
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 109
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 110
BasicConv2d(96, 96, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 132
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 133
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 134
BasicConv2d(c7, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 136
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 137
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 138
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 139
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 140
BasicConv2d(c7, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 142
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 168
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 169
BasicConv2d(192, 320, kernel_size=3, stride=2)

API Invocation in line: 171
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 172
BasicConv2d(192, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 173
BasicConv2d(192, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 174
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 194
BasicConv2d(in_channels, 320, kernel_size=1)

API Invocation in line: 196
BasicConv2d(in_channels, 384, kernel_size=1)

API Invocation in line: 197
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 198
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 200
BasicConv2d(in_channels, 448, kernel_size=1)

API Invocation in line: 201
BasicConv2d(448, 384, kernel_size=3, padding=1)

API Invocation in line: 202
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 203
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 205
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 236
nn.Conv2d(in_channels, out_channels, bias=False, **kwargs)


----------------
Github Link: git://github.com/statisticszhang/FaceMaskRecognition.git
Repository: statisticszhang/FaceMaskRecognition
File path: reference project/load_model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/nama1arpit/MyPortfolio.git
Repository: nama1arpit/MyPortfolio
File path: Blue_Book_For_Bulldozers/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/ShaunSpinelli/fastaiec2.git
Repository: ShaunSpinelli/fastaiec2
File path: fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/Alihussain1/Super-SloMo.git
Repository: Alihussain1/Super-SloMo
File path: UNet.py
API Invocation in line: 21
nn.Conv2d(in_channels, 32, 7, 1, 3)

API Invocation in line: 22
nn.Conv2d(32, 32, 7, 1, 3)

API Invocation in line: 24
nn.Conv2d(32, 64, 5, 1, 2)

API Invocation in line: 25
nn.Conv2d(64, 64, 5, 1, 2)

API Invocation in line: 27
nn.Conv2d(64, 128, 3, 1, 1)

API Invocation in line: 28
nn.Conv2d(128, 128, 3, 1, 1)

API Invocation in line: 30
nn.Conv2d(128, 256, 3, 1, 1)

API Invocation in line: 31
nn.Conv2d(256, 256, 3, 1, 1)

API Invocation in line: 33
nn.Conv2d(256, 512, 3, 1, 1)

API Invocation in line: 34
nn.Conv2d(512, 512, 3, 1, 1)

API Invocation in line: 36
nn.Conv2d(512, 512, 3, 1, 1)

API Invocation in line: 37
nn.Conv2d(512, 512, 3, 1, 1)

API Invocation in line: 42
nn.Conv2d(512, 512, 3, 1, 1)

API Invocation in line: 43
nn.Conv2d((2 * 512), 512, 3, 1, 1)

API Invocation in line: 45
nn.Conv2d(512, 256, 3, 1, 1)

API Invocation in line: 46
nn.Conv2d((2 * 256), 256, 3, 1, 1)

API Invocation in line: 48
nn.Conv2d(256, 128, 3, 1, 1)

API Invocation in line: 49
nn.Conv2d((2 * 128), 128, 3, 1, 1)

API Invocation in line: 51
nn.Conv2d(128, 64, 3, 1, 1)

API Invocation in line: 52
nn.Conv2d((2 * 64), 64, 3, 1, 1)

API Invocation in line: 54
nn.Conv2d(64, 32, 3, 1, 1)

API Invocation in line: 55
nn.Conv2d((2 * 32), out_channels, 3, 1, 1)


----------------
Github Link: git://github.com/swaroop9ai9/Covid-Face-MasK-Detection.git
Repository: swaroop9ai9/Covid-Face-MasK-Detection
File path: load_model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/gyhd/python_study.git
Repository: gyhd/python_study
File path: FaceMaskDetection-master/load_model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/nelson-yao/fastai.git
Repository: nelson-yao/fastai
File path: fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/ahmedshelbaya/deepfaceupdate.git
Repository: ahmedshelbaya/deepfaceupdate
File path: deepface/basemodels/Facenet.py
API Invocation in line: 26
Conv2D(32, 3, strides=2, padding='valid', use_bias=False, name='Conv2d_1a_3x3')(inputs)

API Invocation in line: 27
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_1a_3x3_BatchNorm')(x)

API Invocation in line: 28
Activation('relu', name='Conv2d_1a_3x3_Activation')(x)

API Invocation in line: 29
Conv2D(32, 3, strides=1, padding='valid', use_bias=False, name='Conv2d_2a_3x3')(x)

API Invocation in line: 30
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_2a_3x3_BatchNorm')(x)

API Invocation in line: 31
Activation('relu', name='Conv2d_2a_3x3_Activation')(x)

API Invocation in line: 32
Conv2D(64, 3, strides=1, padding='same', use_bias=False, name='Conv2d_2b_3x3')(x)

API Invocation in line: 33
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_2b_3x3_BatchNorm')(x)

API Invocation in line: 34
Activation('relu', name='Conv2d_2b_3x3_Activation')(x)

API Invocation in line: 36
Conv2D(80, 1, strides=1, padding='valid', use_bias=False, name='Conv2d_3b_1x1')(x)

API Invocation in line: 37
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_3b_1x1_BatchNorm')(x)

API Invocation in line: 38
Activation('relu', name='Conv2d_3b_1x1_Activation')(x)

API Invocation in line: 39
Conv2D(192, 3, strides=1, padding='valid', use_bias=False, name='Conv2d_4a_3x3')(x)

API Invocation in line: 40
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_4a_3x3_BatchNorm')(x)

API Invocation in line: 41
Activation('relu', name='Conv2d_4a_3x3_Activation')(x)

API Invocation in line: 42
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Conv2d_4b_3x3')(x)

API Invocation in line: 43
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Conv2d_4b_3x3_BatchNorm')(x)

API Invocation in line: 44
Activation('relu', name='Conv2d_4b_3x3_Activation')(x)

API Invocation in line: 47
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 48
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 49
Activation('relu', name='Block35_1_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 50
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 51
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 52
Activation('relu', name='Block35_1_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 53
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 54
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 55
Activation('relu', name='Block35_1_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 56
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 57
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 58
Activation('relu', name='Block35_1_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 59
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 60
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 61
Activation('relu', name='Block35_1_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 62
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_1_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 63
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_1_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 64
Activation('relu', name='Block35_1_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 67
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_1_Conv2d_1x1')(mixed)

API Invocation in line: 72
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 73
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 74
Activation('relu', name='Block35_2_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 75
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 76
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 77
Activation('relu', name='Block35_2_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 78
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 79
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 80
Activation('relu', name='Block35_2_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 81
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 82
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 83
Activation('relu', name='Block35_2_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 84
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 85
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 86
Activation('relu', name='Block35_2_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 87
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_2_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 88
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_2_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 89
Activation('relu', name='Block35_2_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 92
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_2_Conv2d_1x1')(mixed)

API Invocation in line: 97
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 98
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 99
Activation('relu', name='Block35_3_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 100
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 101
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 102
Activation('relu', name='Block35_3_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 103
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 104
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 105
Activation('relu', name='Block35_3_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 106
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 107
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 108
Activation('relu', name='Block35_3_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 109
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 110
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 111
Activation('relu', name='Block35_3_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 112
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_3_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 113
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_3_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 114
Activation('relu', name='Block35_3_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 117
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_3_Conv2d_1x1')(mixed)

API Invocation in line: 122
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 123
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 124
Activation('relu', name='Block35_4_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 125
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 126
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 127
Activation('relu', name='Block35_4_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 128
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 129
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 130
Activation('relu', name='Block35_4_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 131
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 132
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 133
Activation('relu', name='Block35_4_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 134
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 135
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 136
Activation('relu', name='Block35_4_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 137
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_4_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 138
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_4_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 139
Activation('relu', name='Block35_4_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 142
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_4_Conv2d_1x1')(mixed)

API Invocation in line: 147
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 148
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 149
Activation('relu', name='Block35_5_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 150
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 151
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 152
Activation('relu', name='Block35_5_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 153
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 154
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 155
Activation('relu', name='Block35_5_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 156
Conv2D(32, 1, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 157
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 158
Activation('relu', name='Block35_5_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 159
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 160
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 161
Activation('relu', name='Block35_5_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 162
Conv2D(32, 3, strides=1, padding='same', use_bias=False, name='Block35_5_Branch_2_Conv2d_0c_3x3')(branch_2)

API Invocation in line: 163
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block35_5_Branch_2_Conv2d_0c_3x3_BatchNorm')(branch_2)

API Invocation in line: 164
Activation('relu', name='Block35_5_Branch_2_Conv2d_0c_3x3_Activation')(branch_2)

API Invocation in line: 167
Conv2D(256, 1, strides=1, padding='same', use_bias=True, name='Block35_5_Conv2d_1x1')(mixed)

API Invocation in line: 173
Conv2D(384, 3, strides=2, padding='valid', use_bias=False, name='Mixed_6a_Branch_0_Conv2d_1a_3x3')(x)

API Invocation in line: 174
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_0_Conv2d_1a_3x3_BatchNorm')(branch_0)

API Invocation in line: 175
Activation('relu', name='Mixed_6a_Branch_0_Conv2d_1a_3x3_Activation')(branch_0)

API Invocation in line: 176
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Mixed_6a_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 177
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 178
Activation('relu', name='Mixed_6a_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 179
Conv2D(192, 3, strides=1, padding='same', use_bias=False, name='Mixed_6a_Branch_1_Conv2d_0b_3x3')(branch_1)

API Invocation in line: 180
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_1_Conv2d_0b_3x3_BatchNorm')(branch_1)

API Invocation in line: 181
Activation('relu', name='Mixed_6a_Branch_1_Conv2d_0b_3x3_Activation')(branch_1)

API Invocation in line: 182
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Mixed_6a_Branch_1_Conv2d_1a_3x3')(branch_1)

API Invocation in line: 183
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_6a_Branch_1_Conv2d_1a_3x3_BatchNorm')(branch_1)

API Invocation in line: 184
Activation('relu', name='Mixed_6a_Branch_1_Conv2d_1a_3x3_Activation')(branch_1)

API Invocation in line: 190
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_1_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 191
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 192
Activation('relu', name='Block17_1_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 193
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_1_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 194
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 195
Activation('relu', name='Block17_1_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 196
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_1_Branch_1_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 197
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_1_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 198
Activation('relu', name='Block17_1_Branch_1_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 199
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_1_Branch_1_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 200
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_1_Branch_1_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 201
Activation('relu', name='Block17_1_Branch_1_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 204
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_1_Conv2d_1x1')(mixed)

API Invocation in line: 209
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_2_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 210
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 211
Activation('relu', name='Block17_2_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 212
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_2_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 213
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 214
Activation('relu', name='Block17_2_Branch_2_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 215
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_2_Branch_2_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 216
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_2_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 217
Activation('relu', name='Block17_2_Branch_2_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 218
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_2_Branch_2_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 219
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_2_Branch_2_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 220
Activation('relu', name='Block17_2_Branch_2_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 223
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_2_Conv2d_1x1')(mixed)

API Invocation in line: 228
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_3_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 229
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 230
Activation('relu', name='Block17_3_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 231
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_3_Branch_3_Conv2d_0a_1x1')(x)

API Invocation in line: 232
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_3_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 233
Activation('relu', name='Block17_3_Branch_3_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 234
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_3_Branch_3_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 235
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_3_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 236
Activation('relu', name='Block17_3_Branch_3_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 237
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_3_Branch_3_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 238
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_3_Branch_3_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 239
Activation('relu', name='Block17_3_Branch_3_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 242
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_3_Conv2d_1x1')(mixed)

API Invocation in line: 247
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_4_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 248
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 249
Activation('relu', name='Block17_4_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 250
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_4_Branch_4_Conv2d_0a_1x1')(x)

API Invocation in line: 251
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_4_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 252
Activation('relu', name='Block17_4_Branch_4_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 253
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_4_Branch_4_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 254
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_4_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 255
Activation('relu', name='Block17_4_Branch_4_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 256
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_4_Branch_4_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 257
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_4_Branch_4_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 258
Activation('relu', name='Block17_4_Branch_4_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 261
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_4_Conv2d_1x1')(mixed)

API Invocation in line: 266
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_5_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 267
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 268
Activation('relu', name='Block17_5_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 269
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_5_Branch_5_Conv2d_0a_1x1')(x)

API Invocation in line: 270
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_5_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 271
Activation('relu', name='Block17_5_Branch_5_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 272
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_5_Branch_5_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 273
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_5_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 274
Activation('relu', name='Block17_5_Branch_5_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 275
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_5_Branch_5_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 276
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_5_Branch_5_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 277
Activation('relu', name='Block17_5_Branch_5_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 280
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_5_Conv2d_1x1')(mixed)

API Invocation in line: 285
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_6_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 286
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 287
Activation('relu', name='Block17_6_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 288
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_6_Branch_6_Conv2d_0a_1x1')(x)

API Invocation in line: 289
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_6_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 290
Activation('relu', name='Block17_6_Branch_6_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 291
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_6_Branch_6_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 292
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_6_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 293
Activation('relu', name='Block17_6_Branch_6_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 294
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_6_Branch_6_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 295
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_6_Branch_6_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 296
Activation('relu', name='Block17_6_Branch_6_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 299
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_6_Conv2d_1x1')(mixed)

API Invocation in line: 304
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_7_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 305
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 306
Activation('relu', name='Block17_7_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 307
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_7_Branch_7_Conv2d_0a_1x1')(x)

API Invocation in line: 308
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_7_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 309
Activation('relu', name='Block17_7_Branch_7_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 310
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_7_Branch_7_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 311
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_7_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 312
Activation('relu', name='Block17_7_Branch_7_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 313
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_7_Branch_7_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 314
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_7_Branch_7_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 315
Activation('relu', name='Block17_7_Branch_7_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 318
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_7_Conv2d_1x1')(mixed)

API Invocation in line: 323
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_8_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 324
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 325
Activation('relu', name='Block17_8_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 326
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_8_Branch_8_Conv2d_0a_1x1')(x)

API Invocation in line: 327
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_8_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 328
Activation('relu', name='Block17_8_Branch_8_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 329
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_8_Branch_8_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 330
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_8_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 331
Activation('relu', name='Block17_8_Branch_8_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 332
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_8_Branch_8_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 333
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_8_Branch_8_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 334
Activation('relu', name='Block17_8_Branch_8_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 337
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_8_Conv2d_1x1')(mixed)

API Invocation in line: 342
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_9_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 343
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 344
Activation('relu', name='Block17_9_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 345
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_9_Branch_9_Conv2d_0a_1x1')(x)

API Invocation in line: 346
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_9_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 347
Activation('relu', name='Block17_9_Branch_9_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 348
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_9_Branch_9_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 349
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_9_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 350
Activation('relu', name='Block17_9_Branch_9_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 351
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_9_Branch_9_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 352
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_9_Branch_9_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 353
Activation('relu', name='Block17_9_Branch_9_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 356
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_9_Conv2d_1x1')(mixed)

API Invocation in line: 361
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_10_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 362
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 363
Activation('relu', name='Block17_10_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 364
Conv2D(128, 1, strides=1, padding='same', use_bias=False, name='Block17_10_Branch_10_Conv2d_0a_1x1')(x)

API Invocation in line: 365
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_10_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 366
Activation('relu', name='Block17_10_Branch_10_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 367
Conv2D(128, [1, 7], strides=1, padding='same', use_bias=False, name='Block17_10_Branch_10_Conv2d_0b_1x7')(branch_1)

API Invocation in line: 368
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_10_Conv2d_0b_1x7_BatchNorm')(branch_1)

API Invocation in line: 369
Activation('relu', name='Block17_10_Branch_10_Conv2d_0b_1x7_Activation')(branch_1)

API Invocation in line: 370
Conv2D(128, [7, 1], strides=1, padding='same', use_bias=False, name='Block17_10_Branch_10_Conv2d_0c_7x1')(branch_1)

API Invocation in line: 371
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block17_10_Branch_10_Conv2d_0c_7x1_BatchNorm')(branch_1)

API Invocation in line: 372
Activation('relu', name='Block17_10_Branch_10_Conv2d_0c_7x1_Activation')(branch_1)

API Invocation in line: 375
Conv2D(896, 1, strides=1, padding='same', use_bias=True, name='Block17_10_Conv2d_1x1')(mixed)

API Invocation in line: 381
Conv2D(256, 1, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_0_Conv2d_0a_1x1')(x)

API Invocation in line: 382
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_0_Conv2d_0a_1x1_BatchNorm')(branch_0)

API Invocation in line: 383
Activation('relu', name='Mixed_7a_Branch_0_Conv2d_0a_1x1_Activation')(branch_0)

API Invocation in line: 384
Conv2D(384, 3, strides=2, padding='valid', use_bias=False, name='Mixed_7a_Branch_0_Conv2d_1a_3x3')(branch_0)

API Invocation in line: 385
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_0_Conv2d_1a_3x3_BatchNorm')(branch_0)

API Invocation in line: 386
Activation('relu', name='Mixed_7a_Branch_0_Conv2d_1a_3x3_Activation')(branch_0)

API Invocation in line: 387
Conv2D(256, 1, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 388
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 389
Activation('relu', name='Mixed_7a_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 390
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Mixed_7a_Branch_1_Conv2d_1a_3x3')(branch_1)

API Invocation in line: 391
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_1_Conv2d_1a_3x3_BatchNorm')(branch_1)

API Invocation in line: 392
Activation('relu', name='Mixed_7a_Branch_1_Conv2d_1a_3x3_Activation')(branch_1)

API Invocation in line: 393
Conv2D(256, 1, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 394
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_2)

API Invocation in line: 395
Activation('relu', name='Mixed_7a_Branch_2_Conv2d_0a_1x1_Activation')(branch_2)

API Invocation in line: 396
Conv2D(256, 3, strides=1, padding='same', use_bias=False, name='Mixed_7a_Branch_2_Conv2d_0b_3x3')(branch_2)

API Invocation in line: 397
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_2_Conv2d_0b_3x3_BatchNorm')(branch_2)

API Invocation in line: 398
Activation('relu', name='Mixed_7a_Branch_2_Conv2d_0b_3x3_Activation')(branch_2)

API Invocation in line: 399
Conv2D(256, 3, strides=2, padding='valid', use_bias=False, name='Mixed_7a_Branch_2_Conv2d_1a_3x3')(branch_2)

API Invocation in line: 400
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Mixed_7a_Branch_2_Conv2d_1a_3x3_BatchNorm')(branch_2)

API Invocation in line: 401
Activation('relu', name='Mixed_7a_Branch_2_Conv2d_1a_3x3_Activation')(branch_2)

API Invocation in line: 408
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_1_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 409
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 410
Activation('relu', name='Block8_1_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 411
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_1_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 412
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 413
Activation('relu', name='Block8_1_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 414
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_1_Branch_1_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 415
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_1_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 416
Activation('relu', name='Block8_1_Branch_1_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 417
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_1_Branch_1_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 418
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_1_Branch_1_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 419
Activation('relu', name='Block8_1_Branch_1_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 422
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_1_Conv2d_1x1')(mixed)

API Invocation in line: 427
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_2_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 428
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 429
Activation('relu', name='Block8_2_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 430
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_2_Branch_2_Conv2d_0a_1x1')(x)

API Invocation in line: 431
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_2_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 432
Activation('relu', name='Block8_2_Branch_2_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 433
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_2_Branch_2_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 434
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_2_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 435
Activation('relu', name='Block8_2_Branch_2_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 436
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_2_Branch_2_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 437
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_2_Branch_2_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 438
Activation('relu', name='Block8_2_Branch_2_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 441
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_2_Conv2d_1x1')(mixed)

API Invocation in line: 446
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_3_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 447
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 448
Activation('relu', name='Block8_3_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 449
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_3_Branch_3_Conv2d_0a_1x1')(x)

API Invocation in line: 450
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_3_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 451
Activation('relu', name='Block8_3_Branch_3_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 452
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_3_Branch_3_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 453
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_3_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 454
Activation('relu', name='Block8_3_Branch_3_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 455
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_3_Branch_3_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 456
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_3_Branch_3_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 457
Activation('relu', name='Block8_3_Branch_3_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 460
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_3_Conv2d_1x1')(mixed)

API Invocation in line: 465
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_4_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 466
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 467
Activation('relu', name='Block8_4_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 468
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_4_Branch_4_Conv2d_0a_1x1')(x)

API Invocation in line: 469
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_4_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 470
Activation('relu', name='Block8_4_Branch_4_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 471
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_4_Branch_4_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 472
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_4_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 473
Activation('relu', name='Block8_4_Branch_4_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 474
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_4_Branch_4_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 475
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_4_Branch_4_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 476
Activation('relu', name='Block8_4_Branch_4_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 479
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_4_Conv2d_1x1')(mixed)

API Invocation in line: 484
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_5_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 485
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 486
Activation('relu', name='Block8_5_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 487
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_5_Branch_5_Conv2d_0a_1x1')(x)

API Invocation in line: 488
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_5_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 489
Activation('relu', name='Block8_5_Branch_5_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 490
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_5_Branch_5_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 491
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_5_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 492
Activation('relu', name='Block8_5_Branch_5_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 493
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_5_Branch_5_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 494
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_5_Branch_5_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 495
Activation('relu', name='Block8_5_Branch_5_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 498
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_5_Conv2d_1x1')(mixed)

API Invocation in line: 503
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_6_Branch_0_Conv2d_1x1')(x)

API Invocation in line: 504
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_0_Conv2d_1x1_BatchNorm')(branch_0)

API Invocation in line: 505
Activation('relu', name='Block8_6_Branch_0_Conv2d_1x1_Activation')(branch_0)

API Invocation in line: 506
Conv2D(192, 1, strides=1, padding='same', use_bias=False, name='Block8_6_Branch_1_Conv2d_0a_1x1')(x)

API Invocation in line: 507
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_1_Conv2d_0a_1x1_BatchNorm')(branch_1)

API Invocation in line: 508
Activation('relu', name='Block8_6_Branch_1_Conv2d_0a_1x1_Activation')(branch_1)

API Invocation in line: 509
Conv2D(192, [1, 3], strides=1, padding='same', use_bias=False, name='Block8_6_Branch_1_Conv2d_0b_1x3')(branch_1)

API Invocation in line: 510
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_1_Conv2d_0b_1x3_BatchNorm')(branch_1)

API Invocation in line: 511
Activation('relu', name='Block8_6_Branch_1_Conv2d_0b_1x3_Activation')(branch_1)

API Invocation in line: 512
Conv2D(192, [3, 1], strides=1, padding='same', use_bias=False, name='Block8_6_Branch_1_Conv2d_0c_3x1')(branch_1)

API Invocation in line: 513
BatchNormalization(axis=3, momentum=0.995, epsilon=0.001, scale=False, name='Block8_6_Branch_1_Conv2d_0c_3x1_BatchNorm')(branch_1)

API Invocation in line: 514
Activation('relu', name='Block8_6_Branch_1_Conv2d_0c_3x1_Activation')(branch_1)

API Invocation in line: 517
Conv2D(1792, 1, strides=1, padding='same', use_bias=True, name='Block8_6_Conv2d_1x1')(mixed)


----------------
Github Link: git://github.com/RQuispeC/top-dropblock.git
Repository: RQuispeC/top-dropblock
File path: torchreid/models/inceptionv4.py
API Invocation in line: 46
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 67
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 104
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 149
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 171
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 233
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 235
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 236
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 237
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 239
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 240
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 241
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 242
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 243
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/dhira108/fastai_real.git
Repository: dhira108/fastai_real
File path: fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/tslgit0/cad1.git
Repository: tslgit0/cad1
File path: code/model/Inceptionv3.py
API Invocation in line: 61
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 62
BasicConv2d(32, 32, kernel_size=3)

API Invocation in line: 63
BasicConv2d(32, 64, kernel_size=3, padding=1)

API Invocation in line: 64
BasicConv2d(64, 80, kernel_size=1)

API Invocation in line: 65
BasicConv2d(80, 192, kernel_size=3)

API Invocation in line: 101
self.Conv2d_1a_3x3(x)

API Invocation in line: 103
self.Conv2d_2a_3x3(x)

API Invocation in line: 105
self.Conv2d_2b_3x3(x)

API Invocation in line: 109
self.Conv2d_3b_1x1(x)

API Invocation in line: 111
self.Conv2d_4a_3x3(x)

API Invocation in line: 158
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 160
BasicConv2d(in_channels, 48, kernel_size=1)

API Invocation in line: 161
BasicConv2d(48, 64, kernel_size=5, padding=2)

API Invocation in line: 163
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 164
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 165
BasicConv2d(96, 96, kernel_size=3, padding=1)

API Invocation in line: 167
BasicConv2d(in_channels, pool_features, kernel_size=1)

API Invocation in line: 190
BasicConv2d(in_channels, 384, kernel_size=3, stride=2)

API Invocation in line: 192
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 193
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 194
BasicConv2d(96, 96, kernel_size=3, stride=2)

API Invocation in line: 213
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 216
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 217
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 218
BasicConv2d(c7, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 220
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 221
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 222
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 223
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 224
BasicConv2d(c7, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 226
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 252
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 253
BasicConv2d(192, 320, kernel_size=3, stride=2)

API Invocation in line: 255
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 256
BasicConv2d(192, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 257
BasicConv2d(192, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 258
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 278
BasicConv2d(in_channels, 320, kernel_size=1)

API Invocation in line: 280
BasicConv2d(in_channels, 384, kernel_size=1)

API Invocation in line: 281
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 282
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 284
BasicConv2d(in_channels, 448, kernel_size=1)

API Invocation in line: 285
BasicConv2d(448, 384, kernel_size=3, padding=1)

API Invocation in line: 286
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 287
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 289
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 320
BasicConv2d(in_channels, 128, kernel_size=1)

API Invocation in line: 321
BasicConv2d(128, 768, kernel_size=5)

API Invocation in line: 348
nn.Conv2d(in_channels, out_channels, bias=False, **kwargs)


----------------
Github Link: git://github.com/sabau/fastai.git
Repository: sabau/fastai
File path: fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/Akshat2395/CloudComputing.git
Repository: Akshat2395/CloudComputing
File path: A1/app/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/victorfmarques/titanic_kaggle.git
Repository: victorfmarques/titanic_kaggle
File path: Titanic/libs/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/MarcVillanueva/fastai.git
Repository: MarcVillanueva/fastai
File path: old/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/Akshat2395/CloudComputing.git
Repository: Akshat2395/CloudComputing
File path: A1/app/load_model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/Akshat2395/CloudComputing.git
Repository: Akshat2395/CloudComputing
File path: A1/python mini file(not needed for website hosting)/image processing/load_model/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/michamich/Anaconda-Projects.git
Repository: michamich/Anaconda-Projects
File path: Dog Breeds/fastai/models/inceptionresnetv2.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 63
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 76
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 94
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 126
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 177
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 185
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 204
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 205
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 206
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 208
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 209
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 260
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/HCyangke/flaskdemo.git
Repository: HCyangke/flaskdemo
File path: tf_model_zoo/inceptionv4/pytorch_load.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 189
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 193
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 195
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 196
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 197
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 199
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/Akshat2395/CloudComputing.git
Repository: Akshat2395/CloudComputing
File path: A1/app/models/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/Akshat2395/CloudComputing.git
Repository: Akshat2395/CloudComputing
File path: A1/python mini file(not needed for website hosting)/image processing/models/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


----------------
Github Link: git://github.com/bearpelican/fastai_imagenet.git
Repository: bearpelican/fastai_imagenet
File path: imagenet_nv/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/yuly16/classification.git
Repository: yuly16/classification
File path: pretrainedmodels/pretrainedmodels/models/inceptionv4.py
API Invocation in line: 39
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 60
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 97
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 111
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 142
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 164
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 226
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 228
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 229
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 230
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 232
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 233
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 234
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 235
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 236
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/jheitmann/Neural-net-pruning.git
Repository: jheitmann/Neural-net-pruning
File path: torchcode/architecture/models.py
API Invocation in line: 27
MaskedConv2d(3, 64, 3, padding=1, bias=bias)

API Invocation in line: 28
MaskedConv2d(64, 64, 3, padding=1, bias=bias)

API Invocation in line: 48
MaskedConv2d(3, 64, 3, padding=1, bias=bias)

API Invocation in line: 49
MaskedConv2d(64, 64, 3, padding=1, bias=bias)

API Invocation in line: 50
MaskedConv2d(64, 128, 3, padding=1, bias=bias)

API Invocation in line: 51
MaskedConv2d(128, 128, 3, padding=1, bias=bias)

API Invocation in line: 73
MaskedConv2d(3, 64, 3, padding=1, bias=bias)

API Invocation in line: 74
MaskedConv2d(64, 64, 3, padding=1, bias=bias)

API Invocation in line: 75
MaskedConv2d(64, 128, 3, padding=1, bias=bias)

API Invocation in line: 76
MaskedConv2d(128, 128, 3, padding=1, bias=bias)

API Invocation in line: 77
MaskedConv2d(128, 256, 3, padding=1, bias=bias)

API Invocation in line: 78
MaskedConv2d(256, 256, 3, padding=1, bias=bias)

API Invocation in line: 102
MaskedConv2d(3, 64, kernel_size=3, stride=2, padding=1)

API Invocation in line: 103
MaskedConv2d(64, 192, kernel_size=3, padding=1)

API Invocation in line: 104
MaskedConv2d(192, 384, kernel_size=3, padding=1)

API Invocation in line: 105
MaskedConv2d(384, 256, kernel_size=3, padding=1)

API Invocation in line: 106
MaskedConv2d(256, 256, kernel_size=3, padding=1)

API Invocation in line: 136
MaskedConv2d(3, 64, kernel_size=3, padding=1, bias=bias)

API Invocation in line: 137
MaskedConv2d(64, 128, kernel_size=3, padding=1, bias=bias)

API Invocation in line: 138
MaskedConv2d(128, 256, kernel_size=3, padding=1, bias=bias)

API Invocation in line: 139
MaskedConv2d(256, 256, kernel_size=3, padding=1, bias=bias)

API Invocation in line: 140
MaskedConv2d(256, 512, kernel_size=3, padding=1, bias=bias)

API Invocation in line: 141
MaskedConv2d(512, 512, kernel_size=3, padding=1, bias=bias)

API Invocation in line: 142
MaskedConv2d(512, 512, kernel_size=3, padding=1, bias=bias)

API Invocation in line: 143
MaskedConv2d(512, 512, kernel_size=3, padding=1, bias=bias)

API Invocation in line: 195
MaskedConv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))

API Invocation in line: 197
MaskedConv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))

API Invocation in line: 199
MaskedConv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))

API Invocation in line: 201
MaskedConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))

API Invocation in line: 203
MaskedConv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))

API Invocation in line: 205
MaskedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))

API Invocation in line: 207
MaskedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))

API Invocation in line: 209
MaskedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))

API Invocation in line: 211
MaskedConv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))

API Invocation in line: 213
MaskedConv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))

API Invocation in line: 215
MaskedConv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))

API Invocation in line: 217
MaskedConv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))

API Invocation in line: 219
MaskedConv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))

API Invocation in line: 221
MaskedConv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))

API Invocation in line: 223
MaskedConv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))

API Invocation in line: 225
MaskedConv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))


----------------
Github Link: git://github.com/BraunAvi/food36.git
Repository: BraunAvi/food36
File path: fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 189
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 193
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 195
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 196
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 197
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 199
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/hh23333/PVPM.git
Repository: hh23333/PVPM
File path: torchreid/models/inceptionv4.py
API Invocation in line: 46
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 67
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 104
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 149
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 171
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 233
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 235
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 236
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 237
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 239
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 240
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 241
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 242
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 243
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/ankit-ai/GAN_breast_mammography_segmentation.git
Repository: ankit-ai/GAN_breast_mammography_segmentation
File path: unet_tf.py
API Invocation in line: 13
Conv2d(inputs, 64, (3, 3), act=tf.nn.relu, name='conv1_1')

API Invocation in line: 14
Conv2d(conv1, 64, (3, 3), act=tf.nn.relu, name='conv1_2')

API Invocation in line: 16
Conv2d(pool1, 128, (3, 3), act=tf.nn.relu, name='conv2_1')

API Invocation in line: 17
Conv2d(conv2, 128, (3, 3), act=tf.nn.relu, name='conv2_2')

API Invocation in line: 19
Conv2d(pool2, 256, (3, 3), act=tf.nn.relu, name='conv3_1')

API Invocation in line: 20
Conv2d(conv3, 256, (3, 3), act=tf.nn.relu, name='conv3_2')

API Invocation in line: 22
Conv2d(pool3, 512, (3, 3), act=tf.nn.relu, name='conv4_1')

API Invocation in line: 23
Conv2d(conv4, 512, (3, 3), act=tf.nn.relu, name='conv4_2')

API Invocation in line: 25
Conv2d(pool4, 1024, (3, 3), act=tf.nn.relu, name='conv5_1')

API Invocation in line: 26
Conv2d(conv5, 1024, (3, 3), act=tf.nn.relu, name='conv5_2')

API Invocation in line: 28
DeConv2d(conv5, 512, (3, 3), ((nx / 8), (ny / 8)), (2, 2), name='deconv4')

API Invocation in line: 30
Conv2d(up4, 512, (3, 3), act=tf.nn.relu, name='uconv4_1')

API Invocation in line: 31
Conv2d(conv4, 512, (3, 3), act=tf.nn.relu, name='uconv4_2')

API Invocation in line: 32
DeConv2d(conv4, 256, (3, 3), ((nx / 4), (ny / 4)), (2, 2), name='deconv3')

API Invocation in line: 34
Conv2d(up3, 256, (3, 3), act=tf.nn.relu, name='uconv3_1')

API Invocation in line: 35
Conv2d(conv3, 256, (3, 3), act=tf.nn.relu, name='uconv3_2')

API Invocation in line: 36
DeConv2d(conv3, 128, (3, 3), ((nx / 2), (ny / 2)), (2, 2), name='deconv2')

API Invocation in line: 38
Conv2d(up2, 128, (3, 3), act=tf.nn.relu, name='uconv2_1')

API Invocation in line: 39
Conv2d(conv2, 128, (3, 3), act=tf.nn.relu, name='uconv2_2')

API Invocation in line: 40
DeConv2d(conv2, 64, (3, 3), ((nx / 1), (ny / 1)), (2, 2), name='deconv1')

API Invocation in line: 42
Conv2d(up1, 64, (3, 3), act=tf.nn.relu, name='uconv1_1')

API Invocation in line: 43
Conv2d(conv1, 64, (3, 3), act=tf.nn.relu, name='uconv1_2')

API Invocation in line: 44
Conv2d(conv1, n_out, (1, 1), act=None, name='uconv1')

API Invocation in line: 162
Conv2d(inputs, 64, (3, 3), act=tf.nn.relu, name='conv1_1')

API Invocation in line: 164
Conv2d(conv1, 64, (3, 3), act=tf.nn.relu, name='conv1_2')

API Invocation in line: 167
Conv2d(pool1, 128, (3, 3), act=tf.nn.relu, name='conv2_1')

API Invocation in line: 171
Conv2d(conv2, 128, (3, 3), act=tf.nn.relu, name='conv2_2')

API Invocation in line: 177
Conv2d(pool2, 256, (3, 3), act=tf.nn.relu, name='conv3_1')

API Invocation in line: 182
Conv2d(conv3, 256, (3, 3), act=tf.nn.relu, name='conv3_2')

API Invocation in line: 187
Conv2d(pool3, 512, (3, 3), act=tf.nn.relu, name='conv4_1')

API Invocation in line: 191
Conv2d(conv4, 512, (3, 3), act=tf.nn.relu, name='conv4_2')

API Invocation in line: 196
Conv2d(pool4, 1024, (3, 3), act=tf.nn.relu, name='conv5_1')

API Invocation in line: 200
Conv2d(conv5, 1024, (3, 3), act=tf.nn.relu, name='conv5_2')

API Invocation in line: 203
DeConv2d(conv5, 512, (3, 3), ((nx / 8), (ny / 8)), (2, 2), name='deconv4')

API Invocation in line: 208
Conv2d(up4, 512, (3, 3), act=tf.nn.relu, name='uconv4_1')

API Invocation in line: 212
Conv2d(conv4, 512, (3, 3), act=tf.nn.relu, name='uconv4_2')

API Invocation in line: 216
DeConv2d(conv4, 256, (3, 3), ((nx / 4), (ny / 4)), (2, 2), name='deconv3')

API Invocation in line: 221
Conv2d(up3, 256, (3, 3), act=tf.nn.relu, name='uconv3_1')

API Invocation in line: 225
Conv2d(conv3, 256, (3, 3), act=tf.nn.relu, name='uconv3_2')

API Invocation in line: 229
DeConv2d(conv3, 128, (3, 3), ((nx / 2), (ny / 2)), (2, 2), name='deconv2')

API Invocation in line: 233
Conv2d(up2, 128, (3, 3), act=tf.nn.relu, name='uconv2_1')

API Invocation in line: 238
Conv2d(conv2, 128, (3, 3), act=tf.nn.relu, name='uconv2_2')

API Invocation in line: 242
DeConv2d(conv2, 64, (3, 3), ((nx / 1), (ny / 1)), (2, 2), name='deconv1')

API Invocation in line: 247
Conv2d(up1, 64, (3, 3), act=tf.nn.relu, name='uconv1_1')

API Invocation in line: 252
Conv2d(conv1, 64, (3, 3), act=tf.nn.relu, name='uconv1_2')

API Invocation in line: 256
Conv2d(conv1, n_out, (1, 1), act=None, name='uconv1')

API Invocation in line: 404
Conv2d(inputs, 64, (4, 4), (2, 2), act=None, padding=pad, W_init=w_init, b_init=b_init, name='conv1')

API Invocation in line: 405
Conv2d(conv1, 128, (4, 4), (2, 2), act=(lambda x: tl.act.lrelu(x, 0.2)), padding=pad, W_init=w_init, b_init=b_init, name='conv2')

API Invocation in line: 408
Conv2d(conv2, 256, (4, 4), (2, 2), act=(lambda x: tl.act.lrelu(x, 0.2)), padding=pad, W_init=w_init, b_init=b_init, name='conv3')

API Invocation in line: 411
Conv2d(conv3, 512, (4, 4), (2, 2), act=(lambda x: tl.act.lrelu(x, 0.2)), padding=pad, W_init=w_init, b_init=b_init, name='conv4')

API Invocation in line: 414
Conv2d(conv4, 512, (4, 4), (2, 2), act=(lambda x: tl.act.lrelu(x, 0.2)), padding=pad, W_init=w_init, b_init=b_init, name='conv5')

API Invocation in line: 417
Conv2d(conv5, 512, (4, 4), (2, 2), act=(lambda x: tl.act.lrelu(x, 0.2)), padding=pad, W_init=w_init, b_init=b_init, name='conv6')

API Invocation in line: 420
Conv2d(conv6, 512, (4, 4), (2, 2), act=(lambda x: tl.act.lrelu(x, 0.2)), padding=pad, W_init=w_init, b_init=b_init, name='conv7')

API Invocation in line: 423
Conv2d(conv7, 512, (4, 4), (2, 2), act=(lambda x: tl.act.lrelu(x, 0.2)), padding=pad, W_init=w_init, b_init=b_init, name='conv8')

API Invocation in line: 427
DeConv2d(conv8, 512, (4, 4), out_size=(2, 2), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv7')

API Invocation in line: 433
DeConv2d(up6, 1024, (4, 4), out_size=(4, 4), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv6')

API Invocation in line: 440
DeConv2d(up5, 1024, (4, 4), out_size=(8, 8), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv5')

API Invocation in line: 447
DeConv2d(up4, 1024, (4, 4), out_size=(15, 15), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv4')

API Invocation in line: 452
DeConv2d(up3, 256, (4, 4), out_size=(30, 30), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv3')

API Invocation in line: 457
DeConv2d(up2, 128, (4, 4), out_size=(60, 60), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv2')

API Invocation in line: 462
DeConv2d(up1, 64, (4, 4), out_size=(120, 120), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv1')

API Invocation in line: 467
DeConv2d(up0, 64, (4, 4), out_size=(240, 240), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv0')

API Invocation in line: 473
Conv2d(up0, n_out, (1, 1), act=tf.nn.sigmoid, name='out')


----------------
Github Link: git://github.com/qnkhuat/kaggle.git
Repository: qnkhuat/kaggle
File path: ga-customer-revenue-prediction/fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/deepakims/fastai.git
Repository: deepakims/fastai
File path: fastai/models/inceptionv4.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 65
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 78
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 108
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 129
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 188
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 190
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 191
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 192
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 194
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 195
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 196
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 197
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 198
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/Akshat2395/CloudComputing.git
Repository: Akshat2395/CloudComputing
File path: A1/MainModel.py
API Invocation in line: 220
nn.Conv2d(**kwargs)


Total file containing the API: 117
Total API usage count: 3253

Download link and script below: 
Time taken: 62.52633881568909

git clone git://github.com/siddhant-99/ibm_crackcovid.git
git clone git://github.com/hgchen/tf_model_zoo.git
git clone git://github.com/narayanhari/dist.git
git clone git://github.com/siddhant-99/ibm_crackcovid.git
git clone git://github.com/sriram98v/fastaiColab.git
git clone git://github.com/Rupak1432/fastai.git
git clone git://github.com/narayanhari/dist.git
git clone git://github.com/Seifeldin7/Machine-Learning.git
git clone git://github.com/hgchen/tf_model_zoo.git
git clone git://github.com/jijiezh/FaceMaskDetection.git
git clone git://github.com/sriram98v/fastaiColab.git
git clone git://github.com/jijiezh/FaceMaskDetection.git
git clone git://github.com/fabbrimatteo/LoCO.git
git clone git://github.com/kimbold/VRDL_2019.git
git clone git://github.com/tyfei216/bioinformatics_classification.git
git clone git://github.com/hiroaki-shishido/fastai.git
git clone git://github.com/albertsl/aisaturdaysbcn.git
git clone git://github.com/17Skye17/2019WAIC-hackthon-Garbage-Classification.git
git clone git://github.com/ProGamerGov/pytorch-old-tensorflow-models.git
git clone git://github.com/zczeng333/Defect-Detection.git
git clone git://github.com/17Skye17/2019WAIC-hackthon-Garbage-Classification.git
git clone git://github.com/thommiano/hear-and-see_peerj.git
git clone git://github.com/Rupak1432/fastai.git
git clone git://github.com/twebb22/FastAIML.git
git clone git://github.com/atulsingh0/DeepLearning.git
git clone git://github.com/peterspenler/Modelling-Complex-Lyric-Project.git
git clone git://github.com/blackdogtop/BGS-HTR.git
git clone git://github.com/NullpoGah/pytorch-masks.git
git clone git://github.com/Antikpatel/FaceMaskDetection.git
git clone git://github.com/17Skye17/2019WAIC-hackthon-Garbage-Classification.git
git clone git://github.com/ehsanShahmi/Nurture-AI-course.git
git clone git://github.com/bernardab/flu-cast.git
git clone git://github.com/saswat0/Mask-Detection.git
git clone git://github.com/17Skye17/2019WAIC-hackthon-Garbage-Classification.git
git clone git://github.com/albertsl/aisaturdaysbcn.git
git clone git://github.com/Antikpatel/FaceMaskDetection.git
git clone git://github.com/agoila/fastai-dl.git
git clone git://github.com/GwonHeeJun/HSDL-Solution.git
git clone git://github.com/rajat9998/MNIST-handwritten-digits-recognition.git
git clone git://github.com/SunYufei/face-mask-detection.git
git clone git://github.com/GwonHeeJun/HSDL-Solution.git
git clone git://github.com/p-syd/social-distancing-ml.git
git clone git://github.com/NullpoGah/pytorch-masks.git
git clone git://github.com/HolmesNL/forensische-gezichtsvergelijking.git
git clone git://github.com/theGreenJedi/fast.git
git clone git://github.com/italodellagarza/eFaceRecon.git
git clone git://github.com/p-syd/social-distancing-ml.git
git clone git://github.com/theGreenJedi/fast.git
git clone git://github.com/PhilippeMarcotte/HW4_IFT6390.git
git clone git://github.com/amansman77/practice-python-kafka.git
git clone git://github.com/bernardab/flu-cast.git
git clone git://github.com/samik1986/ML_Semantic_Segmenation_NMI.git
git clone git://github.com/longyin880815/STCNN.git
git clone git://github.com/zczeng333/Defect-Detection.git
git clone git://github.com/amansman77/practice-python-kafka.git
git clone git://github.com/atulsingh0/DeepLearning.git
git clone git://github.com/thommiano/hear-and-see_peerj.git
git clone git://github.com/kelvinliu04/pytorch_mobilenetssd.git
git clone git://github.com/caiyueliang/CarPlatePointsDetect.git
git clone git://github.com/bearpelican/fastai_imagenet.git
git clone git://github.com/davidbau/dissect.git
git clone git://github.com/ehsanShahmi/Nurture-AI-course.git
git clone git://github.com/vamvictor/Centinela-Nerf.git
git clone git://github.com/rojolocco/docker-chestxray.git
git clone git://github.com/k3larra/interactiveML.git
git clone git://github.com/Tetrix/iNaturalist-API.git
git clone git://github.com/BraunAvi/food36.git
git clone git://github.com/HCyangke/flaskdemo.git
git clone git://github.com/LiliMeng/TRN-pytorch.git
git clone git://github.com/agoila/fastai-dl.git
git clone git://github.com/rohitashwa1907/fastai.git
git clone git://github.com/codehArt/FMD-covid-19.git
git clone git://github.com/beaku/fastai.git
git clone git://github.com/swaroop9ai9/Covid-Face-MasK-Detection.git
git clone git://github.com/klee137/wildlife_in_uiuc.git
git clone git://github.com/codehArt/FMD-covid-19.git
git clone git://github.com/josetxu1974/FACE_MASK_DETECTOR.git
git clone git://github.com/LiliMeng/TRN-pytorch.git
git clone git://github.com/klee137/wildlife_in_uiuc.git
git clone git://github.com/riccardobernardi/MLL-machine-learning-language.git
git clone git://github.com/tommywu052/Thermal_MaskAI_mirror.git
git clone git://github.com/ccny-ros-pkg/pytorch_Concrete_Inspection.git
git clone git://github.com/OmkarShidore/YOLOv3Model.git
git clone git://github.com/ch301292/fastai_old.git
git clone git://github.com/RobZuazua/skin-lesion-challenge.git
git clone git://github.com/tyfei216/bioinformatics_classification.git
git clone git://github.com/JuanFuriaz/donkey_share.git
git clone git://github.com/statisticszhang/FaceMaskRecognition.git
git clone git://github.com/nama1arpit/MyPortfolio.git
git clone git://github.com/ShaunSpinelli/fastaiec2.git
git clone git://github.com/Alihussain1/Super-SloMo.git
git clone git://github.com/swaroop9ai9/Covid-Face-MasK-Detection.git
git clone git://github.com/gyhd/python_study.git
git clone git://github.com/nelson-yao/fastai.git
git clone git://github.com/ahmedshelbaya/deepfaceupdate.git
git clone git://github.com/RQuispeC/top-dropblock.git
git clone git://github.com/dhira108/fastai_real.git
git clone git://github.com/tslgit0/cad1.git
git clone git://github.com/sabau/fastai.git
git clone git://github.com/Akshat2395/CloudComputing.git
git clone git://github.com/victorfmarques/titanic_kaggle.git
git clone git://github.com/MarcVillanueva/fastai.git
git clone git://github.com/Akshat2395/CloudComputing.git
git clone git://github.com/Akshat2395/CloudComputing.git
git clone git://github.com/michamich/Anaconda-Projects.git
git clone git://github.com/HCyangke/flaskdemo.git
git clone git://github.com/Akshat2395/CloudComputing.git
git clone git://github.com/Akshat2395/CloudComputing.git
git clone git://github.com/bearpelican/fastai_imagenet.git
git clone git://github.com/yuly16/classification.git
git clone git://github.com/jheitmann/Neural-net-pruning.git
git clone git://github.com/BraunAvi/food36.git
git clone git://github.com/hh23333/PVPM.git
git clone git://github.com/ankit-ai/GAN_breast_mammography_segmentation.git
git clone git://github.com/qnkhuat/kaggle.git
git clone git://github.com/deepakims/fastai.git
git clone git://github.com/Akshat2395/CloudComputing.git

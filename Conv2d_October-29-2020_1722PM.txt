Total amount of searched repo: 1000
----------------
Github Link: git://github.com/longyin880815/STCNN.git
Repository: longyin880815/STCNN
File path: network/googlenet.py
API Invocation in line: 17
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 18
BasicConv2d(32, 32, kernel_size=3)

API Invocation in line: 19
BasicConv2d(32, 64, kernel_size=3, padding=1)

API Invocation in line: 20
BasicConv2d(64, 80, kernel_size=1)

API Invocation in line: 21
BasicConv2d(80, 192, kernel_size=3)

API Invocation in line: 56
self.Conv2d_1a_3x3(x)

API Invocation in line: 58
self.Conv2d_2a_3x3(x)

API Invocation in line: 60
self.Conv2d_2b_3x3(x)

API Invocation in line: 64
self.Conv2d_3b_1x1(x)

API Invocation in line: 66
self.Conv2d_4a_3x3(x)

API Invocation in line: 113
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 115
BasicConv2d(in_channels, 48, kernel_size=1)

API Invocation in line: 116
BasicConv2d(48, 64, kernel_size=5, padding=2)

API Invocation in line: 118
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 119
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 120
BasicConv2d(96, 96, kernel_size=3, padding=1)

API Invocation in line: 122
BasicConv2d(in_channels, pool_features, kernel_size=1)

API Invocation in line: 145
BasicConv2d(in_channels, 384, kernel_size=3, stride=2)

API Invocation in line: 147
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 148
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 149
BasicConv2d(96, 96, kernel_size=3, stride=2)

API Invocation in line: 168
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 171
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 172
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 173
BasicConv2d(c7, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 175
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 176
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 177
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 178
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 179
BasicConv2d(c7, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 181
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 207
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 208
BasicConv2d(192, 320, kernel_size=3, stride=2)

API Invocation in line: 210
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 211
BasicConv2d(192, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 212
BasicConv2d(192, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 213
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 233
BasicConv2d(in_channels, 320, kernel_size=1)

API Invocation in line: 235
BasicConv2d(in_channels, 384, kernel_size=1)

API Invocation in line: 236
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 237
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 239
BasicConv2d(in_channels, 448, kernel_size=1)

API Invocation in line: 240
BasicConv2d(448, 384, kernel_size=3, padding=1)

API Invocation in line: 241
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 242
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 244
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 275
BasicConv2d(in_channels, 128, kernel_size=1)

API Invocation in line: 276
BasicConv2d(128, 768, kernel_size=5)

API Invocation in line: 300
nn.Conv2d(in_channels, out_channels, bias=False, **kwargs)


----------------
Github Link: git://github.com/fabbrimatteo/LoCO.git
Repository: fabbrimatteo/LoCO
File path: models/inception.py
API Invocation in line: 17
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 18
BasicConv2d(32, 32, kernel_size=3)

API Invocation in line: 19
BasicConv2d(32, 64, kernel_size=3, padding=1)

API Invocation in line: 20
BasicConv2d(64, 80, kernel_size=1)

API Invocation in line: 21
BasicConv2d(80, 192, kernel_size=3)

API Invocation in line: 55
self.Conv2d_1a_3x3(x)

API Invocation in line: 57
self.Conv2d_2a_3x3(x)

API Invocation in line: 59
self.Conv2d_2b_3x3(x)

API Invocation in line: 63
self.Conv2d_3b_1x1(x)

API Invocation in line: 65
self.Conv2d_4a_3x3(x)

API Invocation in line: 100
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 102
BasicConv2d(in_channels, 48, kernel_size=1)

API Invocation in line: 103
BasicConv2d(48, 64, kernel_size=5, padding=2)

API Invocation in line: 105
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 106
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 107
BasicConv2d(96, 96, kernel_size=3, padding=1)

API Invocation in line: 109
BasicConv2d(in_channels, pool_features, kernel_size=1)

API Invocation in line: 133
BasicConv2d(in_channels, 384, kernel_size=3, stride=2)

API Invocation in line: 135
BasicConv2d(in_channels, 64, kernel_size=1)

API Invocation in line: 136
BasicConv2d(64, 96, kernel_size=3, padding=1)

API Invocation in line: 137
BasicConv2d(96, 96, kernel_size=3, stride=2)

API Invocation in line: 157
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 160
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 161
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 162
BasicConv2d(c7, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 164
BasicConv2d(in_channels, c7, kernel_size=1)

API Invocation in line: 165
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 166
BasicConv2d(c7, c7, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 167
BasicConv2d(c7, c7, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 168
BasicConv2d(c7, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 170
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 197
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 198
BasicConv2d(192, 320, kernel_size=3, stride=2)

API Invocation in line: 200
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 201
BasicConv2d(192, 192, kernel_size=(1, 7), padding=(0, 3))

API Invocation in line: 202
BasicConv2d(192, 192, kernel_size=(7, 1), padding=(3, 0))

API Invocation in line: 203
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 224
BasicConv2d(in_channels, 320, kernel_size=1)

API Invocation in line: 226
BasicConv2d(in_channels, 384, kernel_size=1)

API Invocation in line: 227
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 228
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 230
BasicConv2d(in_channels, 448, kernel_size=1)

API Invocation in line: 231
BasicConv2d(448, 384, kernel_size=3, padding=1)

API Invocation in line: 232
BasicConv2d(384, 384, kernel_size=(1, 3), padding=(0, 1))

API Invocation in line: 233
BasicConv2d(384, 384, kernel_size=(3, 1), padding=(1, 0))

API Invocation in line: 235
BasicConv2d(in_channels, 192, kernel_size=1)

API Invocation in line: 267
BasicConv2d(in_channels, 128, kernel_size=1)

API Invocation in line: 268
BasicConv2d(128, 768, kernel_size=5)

API Invocation in line: 293
nn.Conv2d(in_channels, out_channels, bias=False, **kwargs)


----------------
Github Link: git://github.com/davidbau/dissect.git
Repository: davidbau/dissect
File path: experiment/oldresnet152.py
API Invocation in line: 41
nn.Conv2d(3, 64, (7, 7), (2, 2), (3, 3), 1, 1, bias=False)


----------------
Github Link: git://github.com/hh23333/PVPM.git
Repository: hh23333/PVPM
File path: torchreid/models/inceptionv4.py
API Invocation in line: 46
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 67
BasicConv2d(64, 96, kernel_size=3, stride=2)

API Invocation in line: 104
BasicConv2d(192, 192, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(384, 96, kernel_size=1, stride=1)

API Invocation in line: 149
BasicConv2d(384, 384, kernel_size=3, stride=2)

API Invocation in line: 171
BasicConv2d(1024, 384, kernel_size=1, stride=1)

API Invocation in line: 233
BasicConv2d(1536, 256, kernel_size=1, stride=1)

API Invocation in line: 235
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 236
BasicConv2d(384, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 237
BasicConv2d(384, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 239
BasicConv2d(1536, 384, kernel_size=1, stride=1)

API Invocation in line: 240
BasicConv2d(384, 448, kernel_size=(3, 1), stride=1, padding=(1, 0))

API Invocation in line: 241
BasicConv2d(448, 512, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 242
BasicConv2d(512, 256, kernel_size=(1, 3), stride=1, padding=(0, 1))

API Invocation in line: 243
BasicConv2d(512, 256, kernel_size=(3, 1), stride=1, padding=(1, 0))


----------------
Github Link: git://github.com/ankit-ai/GAN_breast_mammography_segmentation.git
Repository: ankit-ai/GAN_breast_mammography_segmentation
File path: unet_tf.py
API Invocation in line: 13
Conv2d(inputs, 64, (3, 3), act=tf.nn.relu, name='conv1_1')

API Invocation in line: 14
Conv2d(conv1, 64, (3, 3), act=tf.nn.relu, name='conv1_2')

API Invocation in line: 16
Conv2d(pool1, 128, (3, 3), act=tf.nn.relu, name='conv2_1')

API Invocation in line: 17
Conv2d(conv2, 128, (3, 3), act=tf.nn.relu, name='conv2_2')

API Invocation in line: 19
Conv2d(pool2, 256, (3, 3), act=tf.nn.relu, name='conv3_1')

API Invocation in line: 20
Conv2d(conv3, 256, (3, 3), act=tf.nn.relu, name='conv3_2')

API Invocation in line: 22
Conv2d(pool3, 512, (3, 3), act=tf.nn.relu, name='conv4_1')

API Invocation in line: 23
Conv2d(conv4, 512, (3, 3), act=tf.nn.relu, name='conv4_2')

API Invocation in line: 25
Conv2d(pool4, 1024, (3, 3), act=tf.nn.relu, name='conv5_1')

API Invocation in line: 26
Conv2d(conv5, 1024, (3, 3), act=tf.nn.relu, name='conv5_2')

API Invocation in line: 28
DeConv2d(conv5, 512, (3, 3), ((nx / 8), (ny / 8)), (2, 2), name='deconv4')

API Invocation in line: 30
Conv2d(up4, 512, (3, 3), act=tf.nn.relu, name='uconv4_1')

API Invocation in line: 31
Conv2d(conv4, 512, (3, 3), act=tf.nn.relu, name='uconv4_2')

API Invocation in line: 32
DeConv2d(conv4, 256, (3, 3), ((nx / 4), (ny / 4)), (2, 2), name='deconv3')

API Invocation in line: 34
Conv2d(up3, 256, (3, 3), act=tf.nn.relu, name='uconv3_1')

API Invocation in line: 35
Conv2d(conv3, 256, (3, 3), act=tf.nn.relu, name='uconv3_2')

API Invocation in line: 36
DeConv2d(conv3, 128, (3, 3), ((nx / 2), (ny / 2)), (2, 2), name='deconv2')

API Invocation in line: 38
Conv2d(up2, 128, (3, 3), act=tf.nn.relu, name='uconv2_1')

API Invocation in line: 39
Conv2d(conv2, 128, (3, 3), act=tf.nn.relu, name='uconv2_2')

API Invocation in line: 40
DeConv2d(conv2, 64, (3, 3), ((nx / 1), (ny / 1)), (2, 2), name='deconv1')

API Invocation in line: 42
Conv2d(up1, 64, (3, 3), act=tf.nn.relu, name='uconv1_1')

API Invocation in line: 43
Conv2d(conv1, 64, (3, 3), act=tf.nn.relu, name='uconv1_2')

API Invocation in line: 44
Conv2d(conv1, n_out, (1, 1), act=None, name='uconv1')

API Invocation in line: 162
Conv2d(inputs, 64, (3, 3), act=tf.nn.relu, name='conv1_1')

API Invocation in line: 164
Conv2d(conv1, 64, (3, 3), act=tf.nn.relu, name='conv1_2')

API Invocation in line: 167
Conv2d(pool1, 128, (3, 3), act=tf.nn.relu, name='conv2_1')

API Invocation in line: 171
Conv2d(conv2, 128, (3, 3), act=tf.nn.relu, name='conv2_2')

API Invocation in line: 177
Conv2d(pool2, 256, (3, 3), act=tf.nn.relu, name='conv3_1')

API Invocation in line: 182
Conv2d(conv3, 256, (3, 3), act=tf.nn.relu, name='conv3_2')

API Invocation in line: 187
Conv2d(pool3, 512, (3, 3), act=tf.nn.relu, name='conv4_1')

API Invocation in line: 191
Conv2d(conv4, 512, (3, 3), act=tf.nn.relu, name='conv4_2')

API Invocation in line: 196
Conv2d(pool4, 1024, (3, 3), act=tf.nn.relu, name='conv5_1')

API Invocation in line: 200
Conv2d(conv5, 1024, (3, 3), act=tf.nn.relu, name='conv5_2')

API Invocation in line: 203
DeConv2d(conv5, 512, (3, 3), ((nx / 8), (ny / 8)), (2, 2), name='deconv4')

API Invocation in line: 208
Conv2d(up4, 512, (3, 3), act=tf.nn.relu, name='uconv4_1')

API Invocation in line: 212
Conv2d(conv4, 512, (3, 3), act=tf.nn.relu, name='uconv4_2')

API Invocation in line: 216
DeConv2d(conv4, 256, (3, 3), ((nx / 4), (ny / 4)), (2, 2), name='deconv3')

API Invocation in line: 221
Conv2d(up3, 256, (3, 3), act=tf.nn.relu, name='uconv3_1')

API Invocation in line: 225
Conv2d(conv3, 256, (3, 3), act=tf.nn.relu, name='uconv3_2')

API Invocation in line: 229
DeConv2d(conv3, 128, (3, 3), ((nx / 2), (ny / 2)), (2, 2), name='deconv2')

API Invocation in line: 233
Conv2d(up2, 128, (3, 3), act=tf.nn.relu, name='uconv2_1')

API Invocation in line: 238
Conv2d(conv2, 128, (3, 3), act=tf.nn.relu, name='uconv2_2')

API Invocation in line: 242
DeConv2d(conv2, 64, (3, 3), ((nx / 1), (ny / 1)), (2, 2), name='deconv1')

API Invocation in line: 247
Conv2d(up1, 64, (3, 3), act=tf.nn.relu, name='uconv1_1')

API Invocation in line: 252
Conv2d(conv1, 64, (3, 3), act=tf.nn.relu, name='uconv1_2')

API Invocation in line: 256
Conv2d(conv1, n_out, (1, 1), act=None, name='uconv1')

API Invocation in line: 404
Conv2d(inputs, 64, (4, 4), (2, 2), act=None, padding=pad, W_init=w_init, b_init=b_init, name='conv1')

API Invocation in line: 405
Conv2d(conv1, 128, (4, 4), (2, 2), act=(lambda x: tl.act.lrelu(x, 0.2)), padding=pad, W_init=w_init, b_init=b_init, name='conv2')

API Invocation in line: 408
Conv2d(conv2, 256, (4, 4), (2, 2), act=(lambda x: tl.act.lrelu(x, 0.2)), padding=pad, W_init=w_init, b_init=b_init, name='conv3')

API Invocation in line: 411
Conv2d(conv3, 512, (4, 4), (2, 2), act=(lambda x: tl.act.lrelu(x, 0.2)), padding=pad, W_init=w_init, b_init=b_init, name='conv4')

API Invocation in line: 414
Conv2d(conv4, 512, (4, 4), (2, 2), act=(lambda x: tl.act.lrelu(x, 0.2)), padding=pad, W_init=w_init, b_init=b_init, name='conv5')

API Invocation in line: 417
Conv2d(conv5, 512, (4, 4), (2, 2), act=(lambda x: tl.act.lrelu(x, 0.2)), padding=pad, W_init=w_init, b_init=b_init, name='conv6')

API Invocation in line: 420
Conv2d(conv6, 512, (4, 4), (2, 2), act=(lambda x: tl.act.lrelu(x, 0.2)), padding=pad, W_init=w_init, b_init=b_init, name='conv7')

API Invocation in line: 423
Conv2d(conv7, 512, (4, 4), (2, 2), act=(lambda x: tl.act.lrelu(x, 0.2)), padding=pad, W_init=w_init, b_init=b_init, name='conv8')

API Invocation in line: 427
DeConv2d(conv8, 512, (4, 4), out_size=(2, 2), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv7')

API Invocation in line: 433
DeConv2d(up6, 1024, (4, 4), out_size=(4, 4), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv6')

API Invocation in line: 440
DeConv2d(up5, 1024, (4, 4), out_size=(8, 8), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv5')

API Invocation in line: 447
DeConv2d(up4, 1024, (4, 4), out_size=(15, 15), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv4')

API Invocation in line: 452
DeConv2d(up3, 256, (4, 4), out_size=(30, 30), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv3')

API Invocation in line: 457
DeConv2d(up2, 128, (4, 4), out_size=(60, 60), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv2')

API Invocation in line: 462
DeConv2d(up1, 64, (4, 4), out_size=(120, 120), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv1')

API Invocation in line: 467
DeConv2d(up0, 64, (4, 4), out_size=(240, 240), strides=(2, 2), padding=pad, act=tf.nn.relu, batch_size=batch_size, W_init=w_init, b_init=b_init, name='deconv0')

API Invocation in line: 473
Conv2d(up0, n_out, (1, 1), act=tf.nn.sigmoid, name='out')


----------------
Github Link: git://github.com/Line290/ActivityNet_task_1.git
Repository: Line290/ActivityNet_task_1
File path: TSN/tf_model_zoo/inceptionresnetv2/pytorch_load.py
API Invocation in line: 15
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 30
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 63
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 76
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 94
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 118
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 126
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 177
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 185
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 204
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 205
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 206
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 208
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 209
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 260
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


----------------
Github Link: git://github.com/hh23333/PVPM.git
Repository: hh23333/PVPM
File path: torchreid/models/inceptionresnetv2.py
API Invocation in line: 47
nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, bias=False)

API Invocation in line: 68
BasicConv2d(192, 96, kernel_size=1, stride=1)

API Invocation in line: 102
BasicConv2d(320, 32, kernel_size=1, stride=1)

API Invocation in line: 115
nn.Conv2d(128, 320, kernel_size=1, stride=1)

API Invocation in line: 134
BasicConv2d(320, 384, kernel_size=3, stride=2)

API Invocation in line: 159
BasicConv2d(1088, 192, kernel_size=1, stride=1)

API Invocation in line: 167
nn.Conv2d(384, 1088, kernel_size=1, stride=1)

API Invocation in line: 220
BasicConv2d(2080, 192, kernel_size=1, stride=1)

API Invocation in line: 228
nn.Conv2d(448, 2080, kernel_size=1, stride=1)

API Invocation in line: 292
BasicConv2d(3, 32, kernel_size=3, stride=2)

API Invocation in line: 293
BasicConv2d(32, 32, kernel_size=3, stride=1)

API Invocation in line: 294
BasicConv2d(32, 64, kernel_size=3, stride=1, padding=1)

API Invocation in line: 296
BasicConv2d(64, 80, kernel_size=1, stride=1)

API Invocation in line: 297
BasicConv2d(80, 192, kernel_size=3, stride=1)

API Invocation in line: 349
BasicConv2d(2080, 1536, kernel_size=1, stride=1)


Total file containing the API: 7
Total API usage count: 207

Download link and script below: 
Time taken: 45.43793511390686

git clone git://github.com/longyin880815/STCNN.git
git clone git://github.com/fabbrimatteo/LoCO.git
git clone git://github.com/davidbau/dissect.git
git clone git://github.com/hh23333/PVPM.git
git clone git://github.com/ankit-ai/GAN_breast_mammography_segmentation.git
git clone git://github.com/Line290/ActivityNet_task_1.git
git clone git://github.com/hh23333/PVPM.git
